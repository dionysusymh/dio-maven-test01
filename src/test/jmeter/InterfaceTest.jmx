<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="action" elementType="Argument">
            <stringProp name="Argument.name">action</stringProp>
            <stringProp name="Argument.value">Priority1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1480429078000</longProp>
        <longProp name="ThreadGroup.end_time">1480429078000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="Oracle JDBC Connection Configuration" enabled="false">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1 from dual</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">oracle-core</stringProp>
          <stringProp name="dbUrl">jdbc:oracle:thin:@10.1.184.12:1521:zgcyhdb</stringProp>
          <stringProp name="driver">oracle.jdbc.OracleDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">readonly</stringProp>
          <stringProp name="poolMax">5</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">readonly</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="MySQL JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">testdb</stringProp>
          <stringProp name="dbUrl">jdbc:mysql://10.4.13.62:3306/testdb?useUnicode=true&amp;characterEncoding=utf8</stringProp>
          <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">zgcbktest123</stringProp>
          <stringProp name="poolMax">3</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">tester</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.4.9.20</stringProp>
          <stringProp name="HTTPSampler.port">9001</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/galaxy</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <SwitchController guiclass="SwitchControllerGui" testclass="SwitchController" testname="Keyword Executor" enabled="true">
          <stringProp name="SwitchController.value">${action}</stringProp>
        </SwitchController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Priority1" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1000_0101-活期存入交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1000_0101 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1000_0101-活期存入" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1000&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0101&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;${SOURCE_TYPE}&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;${BRANCH_ID}&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;172030771&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3201&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_CCY&quot;: &quot;${ACCT_CCY}&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;${PROD_TYPE}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;TRACK2&quot;: &quot;&quot;, &#xd;
		&quot;TRACK3&quot;: &quot;&quot;, &#xd;
		&quot;TRAN_TYPE&quot;: &quot;${TRAN_TYPE}&quot;, &#xd;
		&quot;TRAN_CCY&quot;: &quot;&quot;, &#xd;
		&quot;EFFECT_DATE&quot;: &quot;&quot;, &#xd;
		&quot;BAL_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;PB_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;NARRATIVE&quot;: &quot;&quot;, &#xd;
		&quot;TRAN_AMT&quot;: &quot;${TRAN_AMT}&quot;, &#xd;
		&quot;TRAN_NOTE&quot;: &quot;&quot;, &#xd;
		&quot;PAY_UNIT&quot;: &quot;&quot;, &#xd;
		&quot;EXCHANGE_TRAN_CODE&quot;: &quot;&quot;, &#xd;
		&quot;PREFIX&quot;: &quot;&quot;, &#xd;
		&quot;CASH_ITEM&quot;: &quot;&quot;, &#xd;
		&quot;VOUCHER_NO&quot;: &quot;&quot;, &#xd;
		&quot;DOC_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;COMMISSION_CLIENT_NO&quot;: &quot;&quot;, &#xd;
		&quot;COMMISSION_CLIENT_NAME&quot;: &quot;&quot;, &#xd;
		&quot;COMMISSION_DOC_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;COMMISSION_DOC_ID&quot;: &quot;&quot;, &#xd;
		&quot;SERV_DETAIL&quot;:[{&#xd;
			&quot;FEE_TYPE&quot;: &quot;C01&quot;, &#xd;
			&quot;FEE_CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;FEE_AMT&quot;: &quot;1&quot;, &#xd;
			&quot;ORIG_FEE_AMT&quot;: &quot;&quot;, &#xd;
			&quot;DISC_FEE_AMT&quot;: &quot;&quot;, &#xd;
			&quot;DISC_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;DISC_RATE&quot;: &quot;&quot;, &#xd;
			&quot;BO_CLASS&quot;: &quot;&quot;, &#xd;
			&quot;CHARGE_MODE&quot;: &quot;C&quot;, &#xd;
			&quot;CHARGE_TO_BASE_ACCT_NO&quot;: &quot;&quot;, &#xd;
			&quot;CHARGE_TO_CCY&quot;: &quot;&quot;, &#xd;
			&quot;CHARGE_TO_PROD_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;CHARGE_TO_ACCT_SEQ_NO&quot;: &quot;&quot;, &#xd;
			&quot;WITHDRAWAL_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;PASSWORD&quot;: &quot;&quot;, &#xd;
			&quot;TAX_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;TAX_RATE&quot;: &quot;&quot;, &#xd;
			&quot;TAX_AMT&quot;: &quot;&quot;, &#xd;
			&quot;DOC_TYPE_SERV&quot;: &quot;&quot;, &#xd;
			&quot;PREFIX_SERV&quot;: &quot;&quot;, &#xd;
			&quot;VOUCHER_START_NO&quot;: &quot;&quot;, &#xd;
			&quot;VOUCHER_END_NO&quot;: &quot;&quot;, &#xd;
			&quot;VOUCHER_NUM&quot;: &quot;&quot;, &#xd;
			&quot;UNIT_PRICE&quot;: &quot;&quot;, &#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;SOURCE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SOURCE_TYPE&quot;));
vars.put(&quot;BRANCH_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BRANCH_ID&quot;));
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_CCY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_CCY&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;TRAN_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_TYPE&quot;));
vars.put(&quot;TRAN_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_AMT&quot;));
vars.put(&quot;CASH_ITEM&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CASH_ITEM&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_0111-账户限制查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_0111 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_0111-账户限制查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_ID&quot;: &quot;120030001&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;12&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;171328069&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3522&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0111&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;${PROD_TYPE}&quot;, &#xd;
		&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;0&quot;, &#xd;
		&quot;CLIENT_NO&quot;: &quot;${CLIENT_NO}&quot;, &#xd;
		&quot;DOCUMENT_ID&quot;: &quot;&quot;, &#xd;
		&quot;DOCUMENT_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;ISS_COUNTRY&quot;: &quot;&quot;, &#xd;
		&quot;RESTRAINT_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;STATUS&quot;: &quot;&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));
vars.put(&quot;CCY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CCY&quot;));
vars.put(&quot;CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1000_0103-普调转账交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1000_0103 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1000_0103-活期转账" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1000&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0103&quot;, &#xd;
		&quot;SERVICE_ID&quot;: &quot;010010003&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;01&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;150559215&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3203&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;${PROD_TYPE}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;TRACK2&quot;: &quot;&quot;, &#xd;
		&quot;TRACK3&quot;: &quot;&quot;, &#xd;
		&quot;EFFECT_DATE&quot;: &quot;&quot;, &#xd;
		&quot;TRAN_TYPE&quot;: &quot;${TRAN_TYPE}&quot;, &#xd;
		&quot;BAL_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;PB_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;TRAN_AMT&quot;: &quot;${TRAN_AMT}&quot;, &#xd;
		&quot;TRAN_CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;PAY_UNIT&quot;: &quot;&quot;, &#xd;
		&quot;CASH_ITEM&quot;: &quot;&quot;, &#xd;
		&quot;EXCHANGE_TRAN_CODE&quot;: &quot;&quot;, &#xd;
		&quot;EXCHANGE_TRAN_CODET&quot;: &quot;&quot;, &#xd;
		&quot;TRAN_NOTE&quot;: &quot;&quot;, &#xd;
		&quot;NARRATIVE&quot;: &quot;${NARRATIVE}&quot;, &#xd;
		&quot;WITHDRAWAL_TYPE&quot;: &quot;${WITHDRAWAL_TYPE}&quot;, &#xd;
		&quot;PASSWORD&quot;: &quot;${PASSWORD}&quot;, &#xd;
		&quot;PREFIX&quot;: &quot;${PREFIX}&quot;, &#xd;
		&quot;DOC_TYPE&quot;: &quot;${DOC_TYPE}&quot;, &#xd;
		&quot;VOUCHER_NO&quot;: &quot;${VOUCHER_NO}&quot;, &#xd;
		&quot;OTH_BASE_ACCT_NO&quot;: &quot;${OTH_BASE_ACCT_NO}&quot;, &#xd;
		&quot;OTH_ACCT_CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;OTH_PROD_TYPE&quot;: &quot;${OTH_PROD_TYPE}&quot;, &#xd;
		&quot;OTH_ACCT_SEQ_NO&quot;: &quot;${OTH_ACCT_SEQ_NO}&quot;, &#xd;
		&quot;OTH_BAL_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;OTH_ACCT_NAME&quot;: &quot;${OTH_ACCT_NAME}&quot;, &#xd;
		&quot;COMMISSION_CLIENT_NO&quot;: &quot;&quot;, &#xd;
		&quot;COMMISSION_CLIENT_NAME&quot;: &quot;&quot;, &#xd;
		&quot;COMMISSION_DOC_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;COMMISSION_DOC_ID&quot;: &quot;&quot;, &#xd;
		&quot;SIGN_DATE&quot;: &quot;${SIGN_DATE}&quot;, &#xd;
		&quot;PAY_PASSWORD&quot;: &quot;${PAY_PASSWORD}&quot;, &#xd;
		&quot;TRAN_METHOD&quot;:&quot;${TRAN_METHOD}&quot;&#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;TRAN_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_TYPE&quot;));
vars.put(&quot;TRAN_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_AMT&quot;));
vars.put(&quot;NARRATIVE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;NARRATIVE&quot;));
vars.put(&quot;WITHDRAWAL_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;WITHDRAWAL_TYPE&quot;));
vars.put(&quot;PASSWORD&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PASSWORD&quot;));
vars.put(&quot;PREFIX&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PREFIX&quot;));
vars.put(&quot;DOC_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOC_TYPE&quot;));
vars.put(&quot;VOUCHER_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;VOUCHER_NO&quot;));
vars.put(&quot;OTH_BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OTH_BASE_ACCT_NO&quot;));
vars.put(&quot;OTH_PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OTH_PROD_TYPE&quot;));
vars.put(&quot;OTH_ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OTH_ACCT_SEQ_NO&quot;));
vars.put(&quot;OTH_ACCT_NAME&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OTH_ACCT_NAME&quot;));
vars.put(&quot;SIGN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SIGN_DATE&quot;));
vars.put(&quot;PAY_PASSWORD&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PAY_PASSWORD&quot;));
vars.put(&quot;TRAN_METHOD&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_METHOD&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1000_2309-提前出单还款交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1000_2309 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1000_2309-提前出单还款" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1000&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2308&quot;, &#xd;
		&quot;SERVICE_ID&quot;: &quot;020010002&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;01&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;20171206164909&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4100&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;RECEIPT_DATE&quot;: &quot;&quot;, &#xd;
		&quot;RECEIPT_TYPE&quot;: &quot;${RECEIPT_TYPE}&quot;, &#xd;
		&quot;PAYER&quot;: &quot;&quot;, &#xd;
		&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;RECEIPT_AMT&quot;: &quot;${RECEIPT_AMT}&quot;, &#xd;
		&quot;NARRATIVE&quot;: &quot;&quot;, &#xd;
		&quot;REASON_CODE&quot;: &quot;&quot;, &#xd;
		&quot;RECEIPT_DETAIL&quot;:[{&#xd;
			&quot;INVOICE_TRAN_NO&quot;: &quot;${__Random(1,9999999999999,)}&quot;, &#xd;
			&quot;ACCT_SEQ_NO&quot;: &quot;&quot;, &#xd;
			&quot;STAGE_NO&quot;: &quot;${STAGE_NO}&quot;, &#xd;
			&quot;AMT_TYPE&quot;: &quot;${AMT_TYPE}&quot;, &#xd;
			&quot;REC_XRATE&quot;: &quot;1&quot;, &#xd;
			&quot;REC_XRATE_ID&quot;: &quot;D&quot;, &#xd;
			&quot;REC_AMT&quot;: &quot;${REC_AMT}&quot;, &#xd;
			&quot;TAX_AMT&quot;: &quot;&quot;, &#xd;
			&quot;TAX_RATE&quot;: &quot;&quot;, &#xd;
			&quot;TAX_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;DUE_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
			&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;INVOICE_GEN_MODE&quot;: &quot;&quot;, &#xd;
			&quot;ORIG_AMT_TYPE&quot;: &quot;&quot;, &#xd;
		}],&#xd;
		&quot;CL_SETTLE&quot;:[{&#xd;
			&quot;SETTLE_BRANCH&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_CLIENT&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_ACCT_CLASS&quot;: &quot;${SETTLE_ACCT_CLASS}&quot;, &#xd;
			&quot;SETTLE_METHOD&quot;: &quot;R&quot;, &#xd;
			&quot;PAY_REC_IND&quot;: &quot;${PAY_REC_IND}&quot;, &#xd;
			&quot;AMT_TYPE&quot;: &quot;${AMT_TYPE1}&quot;, &#xd;
			&quot;SETTLE_BASE_ACCT_NO&quot;: &quot;${SETTLE_BASE_ACCT_NO}&quot;, &#xd;
			&quot;SETTLE_ACCT_SEQ_NO&quot;: &quot;&quot;, &#xd;
	          &quot;SETTLE_CLIENT_NO&quot;: &quot;${SETTLE_CLIENT_NO}&quot;, &#xd;
		     &quot;ACCT_CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;PROD_TYPE&quot;: &quot;${PROD_TYPE}&quot;, &#xd;
			&quot;SETTLE_AMT&quot;: &quot;${SETTLE_AMT}&quot;, &#xd;
			&quot;AUTO_BLOCKING&quot;: &quot;&quot;, &#xd;
			&quot;PRIORITY&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_WEIGHT&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_NO&quot;: &quot;&quot;, &#xd;
			&quot;CONTRIBUTIVE_RATIO&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_ACCT_NAME&quot;: &quot;&quot;, &#xd;
			&quot;TRUSTED_PAY_NO&quot;: &quot;&quot;, &#xd;
		}],&#xd;
&#xd;
		&quot;OPTION&quot;: &quot;NS&quot;, &#xd;
		&quot;SYNC_FINAL_BILLING&quot;: &quot;Y&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;RECEIPT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RECEIPT_TYPE&quot;));
vars.put(&quot;RECEIPT_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RECEIPT_AMT&quot;));
vars.put(&quot;INVOICE_TRAN_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INVOICE_TRAN_NO&quot;));
vars.put(&quot;STAGE_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;STAGE_NO&quot;));
vars.put(&quot;AMT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;AMT_TYPE&quot;));
vars.put(&quot;REC_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;REC_AMT&quot;));
vars.put(&quot;DUE_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DUE_DATE&quot;));
vars.put(&quot;INVOICE_GEN_MODE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INVOICE_GEN_MODE&quot;));
vars.put(&quot;SETTLE_BRANCH&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_BRANCH&quot;));
vars.put(&quot;SETTLE_ACCT_CLASS&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_ACCT_CLASS&quot;));
vars.put(&quot;PAY_REC_IND&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PAY_REC_IND&quot;));
vars.put(&quot;AMT_TYPE1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;AMT_TYPE1&quot;));
vars.put(&quot;SETTLE_BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_BASE_ACCT_NO&quot;));

vars.put(&quot;SETTLE_CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_CLIENT_NO&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));

vars.put(&quot;SETTLE_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_AMT&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1200_2206-贷款期限变更+利率变更交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1200_2206 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200_2206-贷款期限变更+利率变更 " enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1200&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2206&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;163616310&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;${PROGRAM_ID}&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;TRAN_FLAG&quot;: &quot;${TRAN_FLAG}&quot;, &#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;MATURITY_DATE&quot;: &quot;${MATURITY_DATE}&quot;, &#xd;
		&quot;NEW_MATURITY_DATE&quot;: &quot;${NEW_MATURITY_DATE}&quot;, &#xd;
		&quot;IRL_INTERNAL_KEY&quot;: &quot;&quot;, &#xd;
		&quot;OPERATE_TYPE&quot;: &quot;01&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;ARRAY&quot;:[{&#xd;
			&quot;INT_CLASS&quot;: &quot;INT&quot;, &#xd;
			&quot;NEW_INT_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;EFFECT_DATE&quot;: &quot;${EFFECT_DATE}&quot;, &#xd;
			&quot;NEW_REAL_RATE&quot;: &quot;&quot;, &#xd;
			&quot;NEW_SPREAD_RATE&quot;: &quot;&quot;, &#xd;
			&quot;NEW_SPREAD_PERCENT&quot;: &quot;&quot;, &#xd;
			&quot;NEW_INT_APPL_TYPE&quot;: &quot;${NEW_INT_APPL_TYPE}&quot;, &#xd;
			&quot;NEW_NEXT_ROLL_DATE&quot;: &quot;&quot;, &#xd;
			&quot;NEW_ROLL_FREQ&quot;: &quot;&quot;, &#xd;
			&quot;NEW_ROLL_DAY&quot;: &quot;&quot;, &#xd;
			&quot;IS_RETRY&quot;: &quot;&quot;, &#xd;
			&quot;CALC_BY_INT&quot;: &quot;&quot;, &#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;PROGRAM_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROGRAM_ID&quot;));
vars.put(&quot;TRAN_FLAG&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_FLAG&quot;));
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;OPERATE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OPERATE_TYPE&quot;));
vars.put(&quot;MATURITY_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;MATURITY_DATE&quot;));
vars.put(&quot;NEW_MATURITY_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;NEW_MATURITY_DATE&quot;));
vars.put(&quot;EFFECT_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;EFFECT_DATE&quot;));
vars.put(&quot;NEW_INT_APPL_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;NEW_INT_APPL_TYPE&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1200_9107-对公客户信息维护交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1200_9107 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200_9107-对公客户信息维护" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1200&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;9107&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;013418234&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;,&#xd;
		&quot;PROGRAM_ID&quot;: &quot;2001&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
                        &quot;acctExec&quot;:&quot;luorenhua&quot;,&#xd;
                        &quot;authCapital&quot;:333,&#xd;
                        &quot;beneficiaryInfo&quot;:[{&#xd;
                                &quot;address&quot;:&quot;西安&quot;,&#xd;
                                &quot;beneficiaryDocId&quot;:&quot;112233&quot;,&#xd;
                                &quot;beneficiaryDocType&quot;:&quot;5&quot;,&#xd;
                                &quot;beneficiaryName&quot;:&quot;受益人名称&quot;,&#xd;
                                &quot;expiryDate&quot;:&quot;20770101&quot;,&#xd;
                                &quot;issCountry&quot;:&quot;CHN&quot;&#xd;
                        }],&#xd;
                        &quot;business&quot;:&quot;100110&quot;,&#xd;
                        &quot;businessScope&quot;:&quot;经营范围&quot;,&#xd;
                        &quot;capitalCcy&quot;:&quot;CNY&quot;,&#xd;
                        &quot;categoryType&quot;:&quot;201&quot;,&#xd;
                        &quot;chGivenName&quot;:&quot;${CH_GIVEN_NAME}&quot;,&#xd;
                        &quot;checkReason&quot;:&quot;不需要调查原因&quot;,&#xd;
                        &quot;classLevel&quot;:&quot;02&quot;,&#xd;
                        &quot;clientIndicator&quot;:&quot;N&quot;,&#xd;
                        &quot;clientNo&quot;:&quot;${CLIENT_NO}&quot;,&#xd;
                        &quot;clientType&quot;:&quot;200&quot;,&#xd;
                        &quot;commissionClientName&quot;:&quot;&quot;,&#xd;
                        &quot;commissionDocId&quot;:&quot;&quot;,&#xd;
                        &quot;commissionDocType&quot;:&quot;0&quot;,&#xd;
                        &quot;company&quot;:&quot;ZGCB&quot;,&#xd;
                        &quot;contactInfo&quot;:[{&#xd;
                                &quot;addrMode&quot;:&quot;0&quot;,&#xd;
                                &quot;address&quot;:&quot;88888&quot;,&#xd;
                                &quot;bicCode&quot;:&quot;999999&quot;,&#xd;
                                &quot;city&quot;:&quot;150200&quot;,&#xd;
                                &quot;clientNo&quot;:&quot;${CLIENT_NO}&quot;,&#xd;
                                &quot;contactTel&quot;:&quot;13700246344&quot;,&#xd;
                                &quot;contactType&quot;:&quot;01&quot;,&#xd;
                                &quot;country&quot;:&quot;CHN&quot;,&#xd;
                                &quot;linkman&quot;:&quot;duizhangren&quot;,&#xd;
                                &quot;option&quot;:&quot;02&quot;,&#xd;
                                &quot;postalCode&quot;:&quot;000000&quot;,&#xd;
                                &quot;prefFlag&quot;:&quot;Y&quot;,&#xd;
                                &quot;route&quot;:&quot;PHONE&quot;,&#xd;
                                &quot;state&quot;:&quot;15&quot;&#xd;
                        }],&#xd;
                        &quot;corpSize&quot;:&quot;9&quot;,&#xd;
                        &quot;countryRisk&quot;:&quot;CHN&quot;,&#xd;
                        &quot;crRating&quot;:&quot;001&quot;,&#xd;
                        &quot;ctrlBranch&quot;:&quot;90001&quot;,&#xd;
                        &quot;documentInfo&quot;:[{&#xd;
                                &quot;clientNo&quot;:&quot;${CLIENT_NO}&quot;,&#xd;
                                &quot;distCode&quot;:&quot;120106&quot;,&#xd;
                                &quot;documentId&quot;:&quot;${DOCUMENT_ID}&quot;,&#xd;
                                &quot;documentType&quot;:&quot;${DOCUMENT_TYPE}&quot;,&#xd;
                                &quot;expiryDate&quot;:&quot;20550101&quot;,&#xd;
                                &quot;inspectDate&quot;:&quot;20180810&quot;,&#xd;
                                &quot;issAuthority&quot;:&quot;qianfajiguan&quot;,&#xd;
                                &quot;issCity&quot;:&quot;120000&quot;,&#xd;
                                &quot;issCountry&quot;:&quot;CHN&quot;,&#xd;
                                &quot;issDate&quot;:&quot;20150101&quot;,&#xd;
                                &quot;issState&quot;:&quot;12&quot;,&#xd;
                                &quot;option&quot;:&quot;02&quot;,&#xd;
                                &quot;prefFlag&quot;:&quot;Y&quot;&#xd;
                        }],&#xd;
                        &quot;economyType&quot;:&quot;110&quot;,&#xd;
                        &quot;enLiveAddress&quot;:&quot;&quot;,&#xd;
                        &quot;higtTechType&quot;:&quot;22&quot;,&#xd;
                        &quot;incorDate&quot;:&quot;20001212&quot;,&#xd;
                        &quot;industry&quot;:&quot;Q8411&quot;,&#xd;
                        &quot;inlandOffshore&quot;:&quot;I&quot;,&#xd;
                        &quot;internalInd&quot;:&quot;Y&quot;,&#xd;
                        &quot;legalRep&quot;:&quot;法人&quot;,&#xd;
                        &quot;listedComType&quot;:&quot;Z&quot;,&#xd;
                        &quot;option&quot;:&quot;02&quot;,&#xd;
                        &quot;plaReg&quot;:&quot;135&quot;,&#xd;
                        &quot;repDocumentId&quot;:&quot;${REP_DOCUMENT_ID}&quot;,&#xd;
                        &quot;repDocumentType&quot;:&quot;${REP_DOCUMENT_TYPE}&quot;,&#xd;
                        &quot;repExpiryDate&quot;:&quot;29990101&quot;,&#xd;
                        &quot;repIssDate&quot;:&quot;20000101&quot;,&#xd;
                        &quot;residentChangeStatus&quot;:&quot;1&quot;,&#xd;
                        &quot;residentCheck&quot;:&quot;2&quot;,&#xd;
                        &quot;residentId&quot;:&quot;1&quot;,&#xd;
                        &quot;sciTechType&quot;:&quot;12&quot;,&#xd;
                        &quot;shareholderInfo&quot;:[{&#xd;
                                &quot;address&quot;:&quot;北京&quot;,&#xd;
                                &quot;expiryDate&quot;:&quot;20440101&quot;,&#xd;
                                &quot;issCountry&quot;:&quot;CHN&quot;,&#xd;
                                &quot;residentFlag&quot;:&quot;1&quot;,&#xd;
                                &quot;shareholderDate&quot;:&quot;20180101&quot;,&#xd;
                                &quot;shareholderDocId&quot;:&quot;123123&quot;,&#xd;
                                &quot;shareholderDocType&quot;:&quot;4&quot;,&#xd;
                                &quot;shareholderName&quot;:&quot;股东名称&quot;,&#xd;
                                &quot;shareholderScale&quot;:&quot;34&quot;,&#xd;
                                &quot;shareholderType&quot;:&quot;20&quot;&#xd;
                        }],&#xd;
                        &quot;speEntType&quot;:&quot;32&quot;,&#xd;
                        &quot;taxCountry&quot;:&quot;&quot;,&#xd;
                        &quot;taxPayerId&quot;:&quot;&quot;,&#xd;
                        &quot;taxPayerReason&quot;:&quot;&quot;,&#xd;
                        &quot;taxPayerReasonText&quot;:&quot;&quot;,&#xd;
                        &quot;tempClient&quot;:&quot;N&quot;,&#xd;
                        &quot;totIncCcy&quot;:&quot;CNY&quot;,&#xd;
                        &quot;totIncCom&quot;:&quot;666&quot;,&#xd;
                        &quot;tranStatus&quot;:&quot;1&quot;&#xd;
                }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;CH_GIVEN_NAME&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CH_GIVEN_NAME&quot;));
vars.put(&quot;CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_NO&quot;));
vars.put(&quot;DOCUMENT_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_ID&quot;));
vars.put(&quot;REP_DOCUMENT_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;REP_DOCUMENT_ID&quot;));
vars.put(&quot;DOCUMENT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_TYPE&quot;));
vars.put(&quot;REP_DOCUMENT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;REP_DOCUMENT_TYPE&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_0185-通知存款支取通知查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_0185 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_0185-通知存款支取通知查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0185&quot;, &#xd;
		&quot;SERVICE_ID&quot;: &quot;010030007&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;03&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;,&#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;165626881&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3554&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;INTERNAL_KEY&quot;: &quot;&quot;, &#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_2104-贷款余额查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_2104 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_2104-贷款余额查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2104&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;150559215&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4903&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_2203-还款计划查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_2203 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_2203-还款计划查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2203&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;150559215&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3050&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_2301-回收信息查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_2301 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_2301-回收信息查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2301&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;140502832&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4904&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;RECEIPT_DATE&quot;: &quot;${RECEIPT_DATE}&quot;, &#xd;
		&quot;RECEIPT_NO&quot;: &quot;${RECEIPT_NO}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;RECEIPT_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RECEIPT_DATE&quot;));
vars.put(&quot;RECEIPT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RECEIPT_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_2304-回收查询单据信息交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_2304 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_2304-回收查询单据信息" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_ID&quot;: &quot;020030001&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;15&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;021151379&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4100&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2304&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;RECEIPT_TYPE&quot;: &quot;${RECEIPT_TYPE}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;RECEIPT_DATE&quot;: &quot;&quot;, &#xd;
		&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;SYNC_FINAL_BILLING&quot;: &quot;${SYNC_FINAL_BILLING}&quot;, &#xd;
		&quot;RECEIPT_AMT&quot;: &quot;${RECEIPT_AMT}&quot;, &#xd;
		&quot;RECEIPT_PRI_AMT&quot;: &quot;${RECEIPT_PRI_AMT}&quot;, &#xd;
		&quot;RECEIPT_FEE_AMT&quot;: &quot;&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;RECEIPT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RECEIPT_TYPE&quot;));
vars.put(&quot;SYNC_FINAL_BILLING&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SYNC_FINAL_BILLING&quot;));
vars.put(&quot;RECEIPT_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RECEIPT_AMT&quot;));
vars.put(&quot;RECEIPT_PRI_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RECEIPT_PRI_AMT&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_2707-存款账户基本信息查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_2707 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_2707-存款账户基本信息查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2707&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;140502832&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3904&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;1&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;10&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;CCY&quot;: &quot;${CCY}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;CCY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CCY&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_0008-账户基本信息查询交易（多笔）--交易ok，但是多笔还未相同如何体现的" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_0008 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_0008-账户基本信息查询交易" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0008&quot;, &#xd;
		&quot;SERVICE_ID&quot;: &quot;120030001&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;03&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;163617160&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3904&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
			&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
			&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
			&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
			&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
			&quot;PGUP_OR_PGDN&quot;: &quot;&quot;, &#xd;
			&quot;TOTAL_NUM&quot;: &quot;&quot;, &#xd;
			&quot;CURRENT_NUM&quot;: &quot;&quot;, &#xd;
			&quot;TOTAL_FLAG&quot;: &quot;&quot;, &#xd;
		}]&#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;LOST_NO&quot;: &quot;&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;ACCT_CCY&quot;: &quot;&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;4&quot;, &#xd;
		&quot;PWD_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;OUT_FLAG&quot;: &quot;01&quot;, &#xd;
		&quot;PASSWORD&quot;: &quot;&quot;, &#xd;
		&quot;GL_CODE_DESC&quot;: &quot;&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_9100-根据客户号或者证件信息查询客户基本信息交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_9100 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_9100-根据客户号或者证件信息查询客户基本信息" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;SYS_HEAD&quot;: {&#xd;
        &quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;,&#xd;
        &quot;MESSAGE_TYPE&quot;: &quot;1400&quot;,&#xd;
        &quot;MESSAGE_CODE&quot;: &quot;9100&quot;,&#xd;
        &quot;SERVICE_ID&quot;: &quot;120030003&quot;,&#xd;
        &quot;SCENE_ID&quot;: &quot;01&quot;,&#xd;
        &quot;TRAN_MODE&quot;: &quot;ONLINE&quot;,&#xd;
        &quot;SOURCE_TYPE&quot;: &quot;CMS&quot;,&#xd;
        &quot;BRANCH_ID&quot;: &quot;90001&quot;,&#xd;
        &quot;USER_ID&quot;: &quot;${USER_ID}&quot;,&#xd;
        &quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;,&#xd;
        &quot;TRAN_TIMESTAMP&quot;: &quot;165840021&quot;,&#xd;
        &quot;USER_LANG&quot;: &quot;CHINESE&quot;,&#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
        &quot;SYSTEM_ID&quot;: &quot;&quot;,&#xd;
        &quot;COMPANY&quot;: &quot;&quot;,&#xd;
        &quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;,&#xd;
        &quot;DEST_BRANCH_NO&quot;: &quot;&quot;,&#xd;
        &quot;FILE_PATH&quot;: &quot;&quot;,&#xd;
        &quot;MAC_VALUE&quot;: &quot;&quot;,&#xd;
        &quot;WS_ID&quot;: &quot;&quot;,&#xd;
        &quot;PROGRAM_ID&quot;: &quot;CL01&quot;,&#xd;
        &quot;AUTH_USER_ID&quot;: &quot;&quot;,&#xd;
        &quot;AUTH_FLAG&quot;: &quot;&quot;,&#xd;
        &quot;APPR_USER_ID&quot;: &quot;&quot;,&#xd;
        &quot;APPR_FLAG&quot;: &quot;&quot;,&#xd;
        &quot;VERSION&quot;: &quot;&quot;,&#xd;
        &quot;THREAD_NO&quot;: &quot;&quot;,&#xd;
        &quot;EXTEND_ARRAY&quot;: [{&#xd;
        	}],&#xd;
        &quot;EXTEND_FIELD&quot;: &quot;&quot;,&#xd;
        &quot;MAC_ORG_ID&quot;: &quot;&quot;,&#xd;
        &quot;CNSM_SYS_SVRID&quot;: &quot;&quot;,&#xd;
        &quot;SRC_SYS_SVRID&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;APP_HEAD&quot;: {&#xd;
        &quot;PGUP_OR_PGDN&quot;: &quot;1&quot;,&#xd;
        &quot;TOTAL_NUM&quot;: &quot;10&quot;,&#xd;
        &quot;CURRENT_NUM&quot;: &quot;1&quot;,&#xd;
        &quot;TOTAL_FLAG&quot;: &quot;E&quot;&#xd;
    },&#xd;
    &quot;BODY&quot;: {&#xd;
	&quot;CLIENT_NO&quot;: &quot;${CLIENT_NO}&quot;, &#xd;
	&quot;DOCUMENT_ID&quot;: &quot;${DOCUMENT_ID}&quot;, &#xd;
	&quot;DOCUMENT_TYPE&quot;: &quot;${DOCUMENT_TYPE}&quot;, &#xd;
	&quot;ISS_COUNTRY&quot;: &quot;${ISS_COUNTRY}&quot;,&#xd;
    }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_NO&quot;));
vars.put(&quot;DOCUMENT_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_ID&quot;));
vars.put(&quot;DOCUMENT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_TYPE&quot;));
vars.put(&quot;ISS_COUNTRY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ISS_COUNTRY&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_9105-根据客户号或者证件信息查询客户详细信息交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_9105 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_9105-根据客户号或者证件信息查询客户详细信息" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;9105&quot;, &#xd;
		&quot;SERVICE_ID&quot;: &quot;120030003&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;07&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;144205846&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;2001&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;CLIENT_NO&quot;: &quot;${CLIENT_NO}&quot;, &#xd;
		&quot;DOCUMENT_ID&quot;: &quot;${DOCUMENT_ID}&quot;, &#xd;
		&quot;DOCUMENT_TYPE&quot;: &quot;${DOCUMENT_TYPE}&quot;, &#xd;
		&quot;ISS_COUNTRY&quot;: &quot;${ISS_COUNTRY}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_NO&quot;));
vars.put(&quot;DOCUMENT_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_ID&quot;));
vars.put(&quot;DOCUMENT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_TYPE&quot;));
vars.put(&quot;ISS_COUNTRY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ISS_COUNTRY&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_2215-贷款单据明细查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_2215 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_2215-贷款单据明细查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_ID&quot;: &quot;020030001&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;15&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;021151379&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;${SYSTEM_ID}&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4908&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2205&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;CCY&quot;: &quot;${CCY}&quot;, &#xd;
	}&#xd;
	&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1000_2308-贷款回收交易--这个是对已经出单的贷款还款，暂时搁置" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1000_2308 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1000_2308-贷款回收" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1000&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2308&quot;, &#xd;
		&quot;SERVICE_ID&quot;: &quot;020010002&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;01&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;20171206164909&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4100&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;RECEIPT_DATE&quot;: &quot;&quot;, &#xd;
		&quot;RECEIPT_TYPE&quot;: &quot;${RECEIPT_TYPE}&quot;, &#xd;
		&quot;PAYER&quot;: &quot;&quot;, &#xd;
		&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;RECEIPT_AMT&quot;: &quot;${RECEIPT_AMT}&quot;, &#xd;
		&quot;NARRATIVE&quot;: &quot;&quot;, &#xd;
		&quot;REASON_CODE&quot;: &quot;&quot;, &#xd;
		&quot;RECEIPT_DETAIL&quot;:[{&#xd;
			&quot;INVOICE_TRAN_NO&quot;: &quot;${INVOICE_TRAN_NO}&quot;, &#xd;
			&quot;ACCT_SEQ_NO&quot;: &quot;&quot;, &#xd;
			&quot;STAGE_NO&quot;: &quot;${STAGE_NO}&quot;, &#xd;
			&quot;AMT_TYPE&quot;: &quot;${AMT_TYPE}&quot;, &#xd;
			&quot;REC_XRATE&quot;: &quot;1&quot;, &#xd;
			&quot;REC_XRATE_ID&quot;: &quot;D&quot;, &#xd;
			&quot;REC_AMT&quot;: &quot;${REC_AMT}&quot;, &#xd;
			&quot;TAX_AMT&quot;: &quot;&quot;, &#xd;
			&quot;TAX_RATE&quot;: &quot;&quot;, &#xd;
			&quot;TAX_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;DUE_DATE&quot;: &quot;${DUE_DATE}&quot;, &#xd;
			&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;INVOICE_GEN_MODE&quot;: &quot;&quot;, &#xd;
			&quot;ORIG_AMT_TYPE&quot;: &quot;&quot;, &#xd;
		},&#xd;
		{&#xd;
			&quot;INVOICE_TRAN_NO&quot;: &quot;${INVOICE_TRAN_NO1}&quot;, &#xd;
			&quot;ACCT_SEQ_NO&quot;: &quot;&quot;, &#xd;
			&quot;STAGE_NO&quot;: &quot;${STAGE_NO1}&quot;, &#xd;
			&quot;AMT_TYPE&quot;: &quot;${AMT_TYPE1}&quot;, &#xd;
			&quot;REC_XRATE&quot;: &quot;1&quot;, &#xd;
			&quot;REC_XRATE_ID&quot;: &quot;D&quot;, &#xd;
			&quot;REC_AMT&quot;: &quot;${REC_AMT1}&quot;, &#xd;
			&quot;TAX_AMT&quot;: &quot;&quot;, &#xd;
			&quot;TAX_RATE&quot;: &quot;&quot;, &#xd;
			&quot;TAX_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;DUE_DATE&quot;: &quot;${DUE_DATE1}&quot;, &#xd;
			&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;INVOICE_GEN_MODE&quot;: &quot;&quot;, &#xd;
			&quot;ORIG_AMT_TYPE&quot;: &quot;&quot;, &#xd;
		}],&#xd;
		&quot;CL_SETTLE&quot;:[{&#xd;
			&quot;SETTLE_BRANCH&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_CLIENT&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_ACCT_CLASS&quot;: &quot;${SETTLE_ACCT_CLASS}&quot;, &#xd;
			&quot;SETTLE_METHOD&quot;: &quot;R&quot;, &#xd;
			&quot;PAY_REC_IND&quot;: &quot;${PAY_REC_IND}&quot;, &#xd;
			&quot;AMT_TYPE&quot;: &quot;${AMT_TYPE2}&quot;, &#xd;
			&quot;SETTLE_BASE_ACCT_NO&quot;: &quot;${SETTLE_BASE_ACCT_NO}&quot;, &#xd;
			&quot;SETTLE_ACCT_SEQ_NO&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_AMT&quot;: &quot;${SETTLE_AMT}&quot;, &#xd;
			&quot;AUTO_BLOCKING&quot;: &quot;&quot;, &#xd;
			&quot;PRIORITY&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_WEIGHT&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_NO&quot;: &quot;&quot;, &#xd;
			&quot;CONTRIBUTIVE_RATIO&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_ACCT_NAME&quot;: &quot;&quot;, &#xd;
			&quot;TRUSTED_PAY_NO&quot;: &quot;&quot;, &#xd;
		}],&#xd;
&#xd;
		&quot;OPTION&quot;: &quot;${OPTION1}&quot;, &#xd;
		&quot;SYNC_FINAL_BILLING&quot;: &quot;${SYNC_FINAL_BILLING}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;RECEIPT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RECEIPT_TYPE&quot;));
vars.put(&quot;RECEIPT_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RECEIPT_AMT&quot;));

vars.put(&quot;INVOICE_TRAN_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INVOICE_TRAN_NO&quot;));
vars.put(&quot;STAGE_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;STAGE_NO&quot;));
vars.put(&quot;AMT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;AMT_TYPE&quot;));
vars.put(&quot;REC_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;REC_AMT&quot;));
vars.put(&quot;DUE_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DUE_DATE&quot;));

vars.put(&quot;INVOICE_TRAN_NO1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INVOICE_TRAN_NO1&quot;));
vars.put(&quot;STAGE_NO1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;STAGE_NO1&quot;));
vars.put(&quot;AMT_TYPE1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;AMT_TYPE1&quot;));
vars.put(&quot;REC_AMT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;REC_AMT1&quot;));
vars.put(&quot;DUE_DATE1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DUE_DATE1&quot;));

vars.put(&quot;INVOICE_GEN_MODE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INVOICE_GEN_MODE&quot;));
vars.put(&quot;SETTLE_BRANCH&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_BRANCH&quot;));
vars.put(&quot;SETTLE_ACCT_CLASS&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_ACCT_CLASS&quot;));
vars.put(&quot;PAY_REC_IND&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PAY_REC_IND&quot;));
vars.put(&quot;AMT_TYPE2&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;AMT_TYPE2&quot;));
vars.put(&quot;SETTLE_BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_BASE_ACCT_NO&quot;));
vars.put(&quot;SETTLE_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_AMT&quot;));

vars.put(&quot;OPTION1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OPTION1&quot;));
vars.put(&quot;SYNC_FINAL_BILLING&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SYNC_FINAL_BILLING&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_2102-贷款信息查询交易（多笔）" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_2102 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_2102-贷款信息查询（多笔）" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2102&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;150559215&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4900&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;CONTRACT_NO&quot;: &quot;${CONTRACT_NO}&quot;, &#xd;
		&quot;CLIENT_NO&quot;: &quot;${CLIENT_NO}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;CONTRACT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CONTRACT_NO&quot;));
vars.put(&quot;CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_0319-账户凭证信息查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_0319 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_0319-账户凭证信息查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_ID&quot;: &quot;120030001&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;13&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;112805204&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3505&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0319&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;${PROD_TYPE}&quot;, &#xd;
		&quot;ACCT_CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_0010-账户交易历史查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_0010 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_0010-账户交易历史查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0010&quot;, &#xd;
		&quot;SERVICE_ID&quot;: &quot;120030001&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;06&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;173302285&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3901&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;QUERY_STATUS&quot;: &quot;${QUERY_STATUS}&quot;, &#xd;
		&quot;START_DATE&quot;: &quot;${START_DATE}&quot;, &#xd;
		&quot;END_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;PWD_TYPE&quot;: &quot;${PWD_TYPE}&quot;, &#xd;
		&quot;PASSWORD&quot;: &quot;${PASSWORD}&quot;, &#xd;
		&quot;TRAN_KIND&quot;: &quot;${TRAN_KIND}&quot;, &#xd;
		&quot;HIST_KIND&quot;: &quot;${HIST_KIND}&quot;, &#xd;
		&quot;REFERENCE&quot;: &quot;${REFERENCE}&quot;, &#xd;
		&quot;AMT_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;AREA_CODE&quot;: &quot;&quot;, &#xd;
		&quot;BRANCH&quot;: &quot;&quot;, &#xd;
		&quot;CLIENT_NO&quot;: &quot;&quot;, &#xd;
		&quot;INTERNAL_KEY&quot;: &quot;&quot;, &#xd;
		&quot;TRAN_TYPE&quot;: &quot;${TRAN_TYPE}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;QUERY_STATUS&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;QUERY_STATUS&quot;));
vars.put(&quot;START_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;START_DATE&quot;));
vars.put(&quot;END_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;END_DATE&quot;));
vars.put(&quot;PWD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PWD_TYPE&quot;));
vars.put(&quot;PASSWORD&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PASSWORD&quot;));
vars.put(&quot;TRAN_KIND&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_KIND&quot;));
vars.put(&quot;HIST_KIND&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;HIST_KIND&quot;));
vars.put(&quot;REFERENCE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;REFERENCE&quot;));
vars.put(&quot;TRAN_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_TYPE&quot;));
vars.put(&quot;QUERY_STATUS&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;QUERY_STATUS&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1200_9911-凭证状态维护交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1200_9911 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200_9911-凭证状态维护" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_ID&quot;: &quot;110020001&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;02&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;145137792&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;2330&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1200&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;9911&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;VOUCHER_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;TRAN_DESC&quot;: &quot;&quot;, &#xd;
		&quot;IS_ACCOUNTING&quot;: &quot;&quot;, &#xd;
		&quot;VOUCHER_ARRAY&quot;:[{&#xd;
			&quot;AMOUNT&quot;: &quot;&quot;, &#xd;
			&quot;START_NO&quot;: &quot;${START_NO}&quot;, &#xd;
			&quot;CCY&quot;: &quot;&quot;, &#xd;
			&quot;END_NO&quot;: &quot;${END_NO}&quot;, &#xd;
			&quot;LINK_VALUE&quot;: &quot;&quot;, &#xd;
			&quot;DOC_TYPE&quot;: &quot;${DOC_TYPE}&quot;, &#xd;
			&quot;PREFIX&quot;: &quot;&quot;, &#xd;
			&quot;SUM&quot;: &quot;${SUM}&quot;, &#xd;
			&quot;OPTION_KW&quot;: &quot;${OPTION_KW}&quot;, &#xd;
			&quot;STATUS&quot;: &quot;&quot;, &#xd;
			&quot;REMARK&quot;: &quot;&quot;, &#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;START_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;START_NO&quot;));
vars.put(&quot;END_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;END_NO&quot;));
vars.put(&quot;DOC_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOC_TYPE&quot;));
vars.put(&quot;SUM&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SUM&quot;));
vars.put(&quot;OPTION_KW&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OPTION_KW&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1200_2720-贷款开立交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1200_2720 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200_2720-贷款开立" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
                        &quot;APPR_FLAG&quot;:&quot;&quot;,&#xd;
                        &quot;APPR_USER_ID&quot;:&quot;&quot;,&#xd;
                        &quot;AUTH_FLAG&quot;:&quot;M&quot;,&#xd;
                        &quot;AUTH_USER_ID&quot;:&quot;&quot;,&#xd;
                        &quot;BRANCH_ID&quot;:&quot;90001&quot;,&#xd;
                        &quot;DEST_BRANCH_NO&quot;:&quot;90001&quot;,&#xd;
                        &quot;MESSAGE_CODE&quot;:&quot;2101&quot;,&#xd;
                        &quot;MESSAGE_TYPE&quot;:&quot;1200&quot;,&#xd;
                        &quot;PROGRAM_ID&quot;:&quot;4000&quot;,&#xd;
                        &quot;REFERENCE&quot;:&quot;&quot;,&#xd;
                        &quot;SCENE_ID&quot;:&quot;01&quot;,&#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
                        &quot;SERVICE_CODE&quot;:&quot;MbsdCore&quot;,&#xd;
                        &quot;SOURCE_BRANCH_NO&quot;:&quot;90001&quot;,&#xd;
                        &quot;SOURCE_TYPE&quot;:&quot;MT&quot;,&#xd;
                        &quot;TRAN_DATE&quot;:&quot;${TRAN_DATE}&quot;,&#xd;
                        &quot;TRAN_MODE&quot;:&quot;ONLINE&quot;,&#xd;
                        &quot;TRAN_TIME_STAMP&quot;:&quot;015925223&quot;,&#xd;
                        &quot;USER_ID&quot;:&quot;${USER_ID}&quot;,&#xd;
                        &quot;USER_LANG&quot;:&quot;CHINESE&quot;&#xd;
                },&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
                        &quot;anytimeRec&quot;:&quot;N&quot;,&#xd;
                        &quot;autoSettle&quot;:&quot;N&quot;,&#xd;
                        &quot;ccy&quot;:&quot;CNY&quot;,&#xd;
                        &quot;clSettle&quot;:[{&#xd;
                                &quot;amtType&quot;:&quot;PF&quot;,&#xd;
                                &quot;payRecInd&quot;:&quot;PAY&quot;,&#xd;
                                &quot;settleAcctCcy&quot;:&quot;CNY&quot;,&#xd;
                                &quot;settleAcctClass&quot;:&quot;PAY&quot;,&#xd;
                                &quot;settleAcctName&quot;:&quot;${SETTLE_ACCT_NAME}&quot;,&#xd;
                                &quot;settleAcctSeqNo&quot;:&quot;0&quot;,&#xd;
                                &quot;settleBaseAcctNo&quot;:&quot;${SETTLE_BASE_ACCT_NO}&quot;,&#xd;
                                &quot;settleBranch&quot;:&quot;90001&quot;,&#xd;
                                &quot;settleCcy&quot;:&quot;CNY&quot;,&#xd;
                                &quot;settleClient&quot;:&quot;${SETTLE_CLIENT}&quot;,&#xd;
                                &quot;settleMethod&quot;:&quot;R&quot;,&#xd;
                                &quot;settleProdType&quot;:&quot;${SETTLE_PROD_TYPE}&quot;,&#xd;
                                &quot;tranType&quot;:&quot;9998&quot;&#xd;
                        }],&#xd;
                        &quot;clientNo&quot;:&quot;${CLIENT_NO}&quot;,&#xd;
                        &quot;contractNo&quot;:&quot;1&quot;,&#xd;
                        &quot;ddEndDate&quot;:&quot;${END_DATE}&quot;,&#xd;
                        &quot;endDate&quot;:&quot;${END_DATE}&quot;,&#xd;
                        &quot;fiveCategory&quot;:&quot;1&quot;,&#xd;
                        &quot;guarantyStyle&quot;:&quot;C001&quot;,&#xd;
                        &quot;homeBranch&quot;:&quot;90001&quot;,&#xd;
                        &quot;huntingStatus&quot;:&quot;Y&quot;,&#xd;
				    &quot;maturityDate&quot;:&quot;${END_DATE}&quot;,&#xd;
                        &quot;openBranch&quot;:&quot;90001&quot;,&#xd;
                        &quot;origLoanAmt&quot;:90001.00,&#xd;
                        &quot;ownershipType&quot;:&quot;SG&quot;,&#xd;
                        &quot;preRepayDeal&quot;:&quot;A&quot;,&#xd;
                        &quot;prodType&quot;:&quot;${PROD_TYPE}&quot;,&#xd;
                        &quot;purpose&quot;:&quot;100&quot;,&#xd;
                        &quot;schedMode&quot;:&quot;1&quot;,&#xd;
                        &quot;ssiEndDate&quot;:&quot;&quot;,&#xd;
                        &quot;startDate&quot;:&quot;${TRAN_DATE}&quot;,&#xd;
                        &quot;intArray&quot;:[&#xd;
                                {&#xd;
                                        &quot;actualRate&quot;:4.35,&#xd;
                                        &quot;calcByInt&quot;:&quot;N&quot;,&#xd;
                                        &quot;cycleFreq&quot;:&quot;M1&quot;,&#xd;
                                        &quot;floatRate&quot;:0,&#xd;
                                        &quot;intApplType&quot;:&quot;N&quot;,&#xd;
                                        &quot;intClass&quot;:&quot;ODODP&quot;,&#xd;
                                        &quot;intDay&quot;:&quot;21&quot;,&#xd;
                                        &quot;intInd&quot;:&quot;Y&quot;,&#xd;
                                        &quot;intType&quot;:&quot;C1&quot;,&#xd;
                                        &quot;monthBasis&quot;:&quot;30&quot;,&#xd;
                                        &quot;nextCycleDate&quot;: &quot;${NEXT_CYCLE_DATE}&quot;,&#xd;
                                        &quot;realRate&quot;:4.35,&#xd;
                                        &quot;yearBasis&quot;:&quot;360&quot;&#xd;
                                },&#xd;
                                {&#xd;
                                        &quot;actualRate&quot;:4.35,&#xd;
                                        &quot;calcByInt&quot;:&quot;N&quot;,&#xd;
                                        &quot;cycleFreq&quot;:&quot;M1&quot;,&#xd;
                                        &quot;floatRate&quot;:0,&#xd;
                                        &quot;intApplType&quot;:&quot;N&quot;,&#xd;
                                        &quot;intClass&quot;:&quot;INT&quot;,&#xd;
                                        &quot;intDay&quot;:&quot;21&quot;,&#xd;
                                        &quot;intInd&quot;:&quot;Y&quot;,&#xd;
                                        &quot;intType&quot;:&quot;C1&quot;,&#xd;
                                        &quot;monthBasis&quot;:&quot;30&quot;,&#xd;
                                        &quot;nextCycleDate&quot;:&quot;${NEXT_CYCLE_DATE}&quot;,&#xd;
                                        &quot;realRate&quot;:4.35,&#xd;
                                        &quot;yearBasis&quot;:&quot;360&quot;&#xd;
                                },&#xd;
                                {&#xd;
                                        &quot;actualRate&quot;:4.35,&#xd;
                                        &quot;calcByInt&quot;:&quot;N&quot;,&#xd;
                                        &quot;cycleFreq&quot;:&quot;M1&quot;,&#xd;
                                        &quot;floatRate&quot;:0,&#xd;
                                        &quot;intApplType&quot;:&quot;N&quot;,&#xd;
                                        &quot;intClass&quot;:&quot;ODI&quot;,&#xd;
                                        &quot;intDay&quot;:&quot;21&quot;,&#xd;
                                        &quot;intInd&quot;:&quot;Y&quot;,&#xd;
                                        &quot;intType&quot;:&quot;C1&quot;,&#xd;
                                        &quot;monthBasis&quot;:&quot;30&quot;,&#xd;
                                        &quot;nextCycleDate&quot;:&quot;${NEXT_CYCLE_DATE}&quot;,&#xd;
                                        &quot;realRate&quot;:4.35,&#xd;
                                        &quot;yearBasis&quot;:&quot;360&quot;&#xd;
                                },&#xd;
                                {&#xd;
                                        &quot;actualRate&quot;:4.35,&#xd;
                                        &quot;calcByInt&quot;:&quot;N&quot;,&#xd;
                                        &quot;cycleFreq&quot;:&quot;M1&quot;,&#xd;
                                        &quot;floatRate&quot;:0,&#xd;
                                        &quot;intApplType&quot;:&quot;N&quot;,&#xd;
                                        &quot;intClass&quot;:&quot;ODODI&quot;,&#xd;
                                        &quot;intDay&quot;:&quot;21&quot;,&#xd;
                                        &quot;intInd&quot;:&quot;Y&quot;,&#xd;
                                        &quot;intType&quot;:&quot;C1&quot;,&#xd;
                                        &quot;monthBasis&quot;:&quot;30&quot;,&#xd;
                                        &quot;nextCycleDate&quot;:&quot;${NEXT_CYCLE_DATE}&quot;,&#xd;
                                        &quot;realRate&quot;:4.35,&#xd;
                                        &quot;yearBasis&quot;:&quot;360&quot;&#xd;
                                },&#xd;
                                {&#xd;
                                        &quot;actualRate&quot;:4.35,&#xd;
                                        &quot;calcByInt&quot;:&quot;N&quot;,&#xd;
                                        &quot;cycleFreq&quot;:&quot;M1&quot;,&#xd;
                                        &quot;floatRate&quot;:0,&#xd;
                                        &quot;intApplType&quot;:&quot;N&quot;,&#xd;
                                        &quot;intClass&quot;:&quot;ODP&quot;,&#xd;
                                        &quot;intDay&quot;:&quot;21&quot;,&#xd;
                                        &quot;intInd&quot;:&quot;Y&quot;,&#xd;
                                        &quot;intType&quot;:&quot;C1&quot;,&#xd;
                                        &quot;monthBasis&quot;:&quot;30&quot;,&#xd;
                                        &quot;nextCycleDate&quot;:&quot;${NEXT_CYCLE_DATE}&quot;,&#xd;
                                        &quot;realRate&quot;:4.35,&#xd;
                                        &quot;yearBasis&quot;:&quot;360&quot;&#xd;
                                }],&#xd;
                }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
vars.put(&quot;SETTLE_ACCT_NAME&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_ACCT_NAME&quot;));
vars.put(&quot;SETTLE_BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_BASE_ACCT_NO&quot;));
vars.put(&quot;SETTLE_CLIENT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_CLIENT&quot;));
vars.put(&quot;SETTLE_PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_PROD_TYPE&quot;));
vars.put(&quot;CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_NO&quot;));
vars.put(&quot;END_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;END_DATE&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));
vars.put(&quot;NEXT_CYCLE_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;NEXT_CYCLE_DATE&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1200_2107-贷款终止和关闭交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1200_2107 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200_2107-贷款终止和关闭" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1200&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2107&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;111913320&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4210&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;TERMINATE_IND&quot;: &quot;N&quot;, &#xd;
		&quot;CLOSE_FLAG&quot;: &quot;Y&quot;, &#xd;
		&quot;CLOSE_REASON&quot;: &quot;${CLOSE_REASON}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));
vars.put(&quot;CLOSE_FLAG&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLOSE_FLAG&quot;));
vars.put(&quot;CLOSE_REASON&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLOSE_REASON&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1200_2105-结算账户变更交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1200_2105 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200_2105-结算账户变更" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1200&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2105&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;165626881&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4211&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;AUTO_REC&quot;: &quot;${AUTO_REC}&quot;, &#xd;
		&quot;SETTLE_ARRAY&quot;:[{&#xd;
			&quot;OPTION&quot;: &quot;${OPTION1}&quot;, &#xd;
			&quot;SETTLE_CLIENT&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_ACCT_CLASS&quot;: &quot;${SETTLE_ACCT_CLASS}&quot;, &#xd;
			&quot;SETTLE_METHOD&quot;: &quot;${SETTLE_METHOD}&quot;, &#xd;
			&quot;SETTLE_ACCT_CCY&quot;: &quot;${SETTLE_ACCT_CCY}&quot;, &#xd;
			&quot;PAY_REC_IND&quot;: &quot;${PAY_REC_IND}&quot;, &#xd;
			&quot;AMT_TYPE&quot;: &quot;${AMT_TYPE}&quot;, &#xd;
			&quot;SETTLE_BASE_ACCT_NO&quot;: &quot;${SETTLE_BASE_ACCT_NO}&quot;, &#xd;
			&quot;SETTLE_ACCT_SEQ_NO&quot;: &quot;${SETTLE_ACCT_SEQ_NO}&quot;, &#xd;
			&quot;SETTLE_AMT&quot;: &quot;&quot;, &#xd;
			&quot;AUTO_BLOCKING&quot;: &quot;&quot;, &#xd;
			&quot;PRIORITY&quot;: &quot;&quot;, &#xd;
			&quot;SETTLE_WEIGHT&quot;: &quot;&quot;, &#xd;
			&quot;TRAN_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;ALLOC_SEQ_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;ALLOC_SEQ_PRI&quot;: &quot;&quot;, &#xd;
			&quot;ALLOC_SEQ_INT&quot;: &quot;&quot;, &#xd;
			&quot;ALLOC_SEQ_ODP&quot;: &quot;&quot;, &#xd;
			&quot;ALLOC_SEQ_ODI&quot;: &quot;&quot;, &#xd;
			&quot;ALLOC_SEQ_FEE&quot;: &quot;&quot;, &#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;AUTO_REC&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;AUTO_REC&quot;));
vars.put(&quot;OPTION1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OPTION1&quot;));
vars.put(&quot;SETTLE_ACCT_CLASS&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_ACCT_CLASS&quot;));
vars.put(&quot;SETTLE_METHOD&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_METHOD&quot;));
vars.put(&quot;SETTLE_ACCT_CCY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_ACCT_CCY&quot;));
vars.put(&quot;PAY_REC_IND&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PAY_REC_IND&quot;));
vars.put(&quot;AMT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;AMT_TYPE&quot;));
vars.put(&quot;SETTLE_BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_BASE_ACCT_NO&quot;));
vars.put(&quot;SETTLE_ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;SETTLE_ACCT_SEQ_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1200_0103-账户限制交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1200_0103 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200_0103-账户限制" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1200&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0103&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;103143019&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3521&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
          &quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;${PROD_TYPE}&quot;, &#xd;
		&quot;ACCT_CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;&quot;, &#xd;
		&quot;OPTION&quot;: &quot;01&quot;, &#xd;
		&quot;RES_ACCT_RANGE&quot;: &quot;${RES_ACCT_RANGE}&quot;, &#xd;
		&quot;DEAL_CLASS&quot;: &quot;ACCT&quot;, &#xd;
		&quot;DEAL_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;RESTRAINT_SEQ_NO&quot;: &quot;${RESTRAINT_SEQ_NO}&quot;, &#xd;
		&quot;RESTRAINT_TYPE&quot;: &quot;${RESTRAINT_TYPE}&quot;, &#xd;
		&quot;START_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TERM&quot;: &quot;${TERM}&quot;, &#xd;
		&quot;TERM_TYPE&quot;: &quot;${TERM_TYPE}&quot;, &#xd;
		&quot;END_DATE&quot;: &quot;${END_DATE}&quot;, &#xd;
		&quot;NARRATIVE&quot;: &quot;&quot;, &#xd;
		&quot;PREFIX&quot;: &quot;&quot;, &#xd;
		&quot;DOC_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;START_CHEQUE_NO&quot;: &quot;&quot;, &#xd;
		&quot;END_CHEQUE_NO&quot;: &quot;&quot;, &#xd;
		&quot;PLEDGED_AMT&quot;: &quot;&quot;, &#xd;
		&quot;RESTRAINT_LAW_NO&quot;: &quot;&quot;, &#xd;
		&quot;RESTRAINT_JUDICIARY_NAME&quot;: &quot;&quot;, &#xd;
		&quot;RELEASE_JUDICIARY_NAME&quot;: &quot;&quot;, &#xd;
		&quot;RELEASE_LAW_NO&quot;: &quot;&quot;, &#xd;
		&quot;UNDER_LIEN&quot;: &quot;&quot;, &#xd;
		&quot;ACCT_STATUS&quot;: &quot;&quot;, &#xd;
		&quot;JUDICIARY_OFFICER_NAME&quot;: &quot;&quot;, &#xd;
		&quot;JUDICIARY_DOCUMENT_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;JUDICIARY_DOCUMENT_ID&quot;: &quot;&quot;, &#xd;
		&quot;JUDICIARY_OTH_OFFICER_NAME&quot;: &quot;&quot;, &#xd;
		&quot;JUDICIARY_OTH_DOCUMENT_TYPE&quot;: &quot;&quot;, &#xd;
		&quot;JUDICIARY_OTH_DOCUMENT_ID&quot;: &quot;&quot;, &#xd;
            &#xd;
&#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));
vars.put(&quot;RES_ACCT_RANGE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RES_ACCT_RANGE&quot;));
vars.put(&quot;RESTRAINT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RESTRAINT_SEQ_NO&quot;));
vars.put(&quot;RESTRAINT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RESTRAINT_TYPE&quot;));
vars.put(&quot;START_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;START_DATE&quot;));
vars.put(&quot;TERM&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TERM&quot;));
vars.put(&quot;TERM_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TERM_TYPE&quot;));
vars.put(&quot;END_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;END_DATE&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_2213-放款成功/失败查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_2213 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_2213-放款成功/失败查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2213&quot;, &#xd;
		&quot;SERVICE_ID&quot;: &quot;020030001&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;08&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;${__time(HHmmss,)}&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;${SYSTEM_ID}&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4901&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;CHANNEL_SEQ_NO&quot;: &quot;${CHANNEL_SEQ_NO}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;CHANNEL_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHANNEL_SEQ_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_2211-提前还款试算交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_2211 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_2211-提前还款试算" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;: {&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;,&#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;2211&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;113356166&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;4919&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;LOAN_AMT&quot;: &quot;${LOAN_AMT}&quot;, &#xd;
		&quot;DUE_DATE&quot;: &quot;${DUE_DATE}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;LOAN_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;LOAN_AMT&quot;));
vars.put(&quot;DUE_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DUE_DATE&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1200_9100-快速建立客户信息交易（对私客户）" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1200_9100 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200_9100-快速建立客户信息（对私客户）" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
        &quot;SYS_HEAD&quot;: {&#xd;
            &quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;,&#xd;
            &quot;MESSAGE_TYPE&quot;: &quot;1200&quot;,&#xd;
            &quot;MESSAGE_CODE&quot;: &quot;9100&quot;,&#xd;
            &quot;SERVICE_ID&quot;: &quot;010030002&quot;,&#xd;
            &quot;SCENE_ID&quot;: &quot;01&quot;,&#xd;
            &quot;TRAN_MODE&quot;: &quot;ONLINE&quot;,&#xd;
            &quot;SOURCE_TYPE&quot;: &quot;MT&quot;,&#xd;
            &quot;BRANCH_ID&quot;: &quot;90001&quot;,&#xd;
            &quot;USER_ID&quot;: &quot;${USER_ID}&quot;,&#xd;
            &quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;,&#xd;
            &quot;TRAN_TIMESTAMP&quot;: &quot;110000910&quot;,&#xd;
            &quot;USER_LANG&quot;: &quot;CHINESE&quot;,&#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
            &quot;SYSTEM_ID&quot;: &quot;&quot;,&#xd;
            &quot;COMPANY&quot;: &quot;&quot;,&#xd;
            &quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;,&#xd;
            &quot;DEST_BRANCH_NO&quot;: &quot;&quot;,&#xd;
            &quot;FILE_PATH&quot;: &quot;&quot;,&#xd;
            &quot;MAC_VALUE&quot;: &quot;&quot;,&#xd;
            &quot;WS_ID&quot;: &quot;&quot;,&#xd;
            &quot;PROGRAM_ID&quot;: &quot;2000&quot;,&#xd;
            &quot;AUTH_USER_ID&quot;: &quot;&quot;,&#xd;
            &quot;AUTH_FLAG&quot;: &quot;&quot;,&#xd;
            &quot;APPR_USER_ID&quot;: &quot;&quot;,&#xd;
            &quot;APPR_FLAG&quot;: &quot;&quot;,&#xd;
            &quot;VERSION&quot;: &quot;&quot;,&#xd;
            &quot;THREAD_NO&quot;: &quot;&quot;,&#xd;
            &quot;EXTEND_ARRAY&quot;: [{&#xd;
            }],&#xd;
            &quot;EXTEND_FIELD&quot;: &quot;&quot;,&#xd;
            &quot;MAC_ORG_ID&quot;: &quot;&quot;,&#xd;
            &quot;CNSM_SYS_SVRID&quot;: &quot;&quot;,&#xd;
            &quot;SRC_SYS_SVRID&quot;: &quot;&quot;,&#xd;
        },&#xd;
        &quot;APP_HEAD&quot;: {&#xd;
            &quot;currentNum&quot;: &quot;0&quot;,&#xd;
            &quot;pageEnd&quot;: &quot;0&quot;,&#xd;
            &quot;pageStart&quot;: &quot;0&quot;,&#xd;
            &quot;pgupOrPgdn&quot;: &quot;0&quot;,&#xd;
            &quot;totalFlag&quot;: &quot;E&quot;,&#xd;
            &quot;totalNum&quot;: &quot;-1&quot;&#xd;
        },&#xd;
        &quot;BODY&quot;: {&#xd;
            &quot;address&quot;: &quot;北京市海淀区&quot;,&#xd;
            &quot;birthDate&quot;: &quot;${BIRTH_DATE}&quot;,&#xd;
            &quot;categoryType&quot;: &quot;${CATEGORY_TYPE}&quot;,&#xd;
            &quot;chGivenName&quot;: &quot;接口测试户&quot;,&#xd;
            &quot;chSurname&quot;: &quot;22&quot;,&#xd;
            &quot;checkReason&quot;: &quot;1212&quot;,&#xd;
            &quot;clientType&quot;: &quot;100&quot;,&#xd;
            &quot;company&quot;: &quot;ZGCB&quot;,&#xd;
            &quot;contactInfo&quot;: [{&#xd;
                &quot;address&quot;: &quot;居住地址&quot;,&#xd;
                &quot;contactTel&quot;: &quot;10000000001&quot;,&#xd;
                &quot;contactType&quot;: &quot;13&quot;,&#xd;
                &quot;country&quot;: &quot;CHN&quot;,&#xd;
                &quot;prefFlag&quot;: &quot;Y&quot;,&#xd;
                &quot;state&quot;: &quot;11&quot;&#xd;
            }],&#xd;
            &quot;countryCitizen&quot;: &quot;CHN&quot;,&#xd;
            &quot;countryLoc&quot;: &quot;CHN&quot;,&#xd;
            &quot;countryRisk&quot;: &quot;CHN&quot;,&#xd;
            &quot;ctrlBranch&quot;: &quot;90001&quot;,&#xd;
            &quot;documentInfo&quot;: [{&#xd;
                &quot;documentId&quot;: &quot;${__RandomString(18,1234567890,)}&quot;,&#xd;
                &quot;documentType&quot;: &quot;${DOCUMENT_TYPE}&quot;,&#xd;
                &quot;expiryDate&quot;: &quot;20990909&quot;,&#xd;
                &quot;issAuthority&quot;: &quot;签发机关&quot;,&#xd;
                &quot;issCountry&quot;: &quot;CHN&quot;,&#xd;
                &quot;issDate&quot;: &quot;20010101&quot;,&#xd;
                &quot;issPlace&quot;: &quot;310000&quot;,&#xd;
                &quot;prefFlag&quot;: &quot;Y&quot;&#xd;
            }],&#xd;
            &quot;enCity&quot;: &quot;Englishcity&quot;,&#xd;
            &quot;enLiveAddress&quot;: &quot;&quot;,&#xd;
            &quot;givenName&quot;: &quot;lastname&quot;,&#xd;
            &quot;inlandOffshore&quot;: &quot;I&quot;,&#xd;
            &quot;maritalStatus&quot;: &quot;M&quot;,&#xd;
            &quot;occupationCode&quot;: &quot;70000&quot;,&#xd;
            &quot;residentCheck&quot;: &quot;2&quot;,&#xd;
            &quot;residentId&quot;: &quot;1&quot;,&#xd;
            &quot;residentStatus&quot;: &quot;C&quot;,&#xd;
            &quot;sex&quot;: &quot;M&quot;,&#xd;
            &quot;stateLoc&quot;: &quot;11&quot;,&#xd;
            &quot;surname&quot;: &quot;firstname&quot;,&#xd;
            &quot;taxCountry&quot;: &quot;&quot;,&#xd;
            &quot;taxPayerId&quot;: &quot;&quot;,&#xd;
            &quot;taxPayerReason&quot;: &quot;&quot;,&#xd;
            &quot;taxPayerReasonText&quot;: &quot;&quot;&#xd;
                    }&#xd;
    }</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BIRTH_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BIRTH_DATE&quot;));
vars.put(&quot;DOCUMENT_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_ID&quot;));
vars.put(&quot;DOCUMENT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_TYPE&quot;));
vars.put(&quot;CATEGORY_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CATEGORY_TYPE&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1000_0104-手工收费交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1000_0104 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1000_0104-手工收费" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_ID&quot;: &quot;120010002&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;01&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;113303813&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3531&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1000&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0104&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;CLIENT_NO&quot;: &quot;${CLIENT_NO}&quot;, &#xd;
		&quot;SERV_DETAIL&quot;:[{&#xd;
			&quot;FEE_TYPE&quot;: &quot;${FEE_TYPE}&quot;, &#xd;
			&quot;FEE_CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;FEE_AMT&quot;: &quot;${FEE_AMT}&quot;, &#xd;
			&quot;ORIG_FEE_AMT&quot;: &quot;${FEE_AMT}&quot;, &#xd;
			&quot;DISC_FEE_AMT&quot;: &quot;&quot;, &#xd;
			&quot;DISC_TYPE&quot;: &quot;01&quot;, &#xd;
			&quot;DISC_RATE&quot;: &quot;&quot;, &#xd;
			&quot;BO_CLASS&quot;: &quot;O&quot;, &#xd;
			&quot;CHARGE_MODE&quot;: &quot;${CHARGE_MODE}&quot;, &#xd;
			&quot;CHARGE_TO_BASE_ACCT_NO&quot;: &quot;${CHARGE_TO_BASE_ACCT_NO}&quot;, &#xd;
			&quot;CHARGE_TO_CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;CHARGE_TO_PROD_TYPE&quot;: &quot;${CHARGE_TO_PROD_TYPE}&quot;, &#xd;
			&quot;CHARGE_TO_ACCT_SEQ_NO&quot;: &quot;${CHARGE_TO_ACCT_SEQ_NO}&quot;, &#xd;
			&quot;WITHDRAWAL_TYPE&quot;: &quot;${WITHDRAWAL_TYPE}&quot;, &#xd;
			&quot;PASSWORD&quot;: &quot;${PASSWORD}&quot;, &#xd;
			&quot;TAX_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;TAX_RATE&quot;: &quot;&quot;, &#xd;
			&quot;TAX_AMT&quot;: &quot;&quot;, &#xd;
			&quot;DOC_TYPE&quot;: &quot;&quot;, &#xd;
			&quot;PREFIX&quot;: &quot;&quot;, &#xd;
			&quot;VOUCHER_START_NO&quot;: &quot;&quot;, &#xd;
			&quot;VOUCHER_END_NO&quot;: &quot;&quot;, &#xd;
			&quot;VOUCHER_NUM&quot;: &quot;&quot;, &#xd;
			&quot;OSD_SEQ_NO&quot;: &quot;&quot;, &#xd;
			&quot;AGREEMENT_ID&quot;: &quot;&quot;, &#xd;
			&quot;UNIT_PRICE&quot;: &quot;&quot;, &#xd;
		}]&#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_NO&quot;));
vars.put(&quot;FEE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;FEE_TYPE&quot;));
vars.put(&quot;FEE_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;FEE_AMT&quot;));
vars.put(&quot;CHARGE_MODE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_MODE&quot;));
vars.put(&quot;CHARGE_TO_BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_TO_BASE_ACCT_NO&quot;));
vars.put(&quot;CHARGE_TO_PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_TO_PROD_TYPE&quot;));
vars.put(&quot;CHARGE_TO_ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_TO_ACCT_SEQ_NO&quot;));
vars.put(&quot;WITHDRAWAL_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;WITHDRAWAL_TYPE&quot;));
vars.put(&quot;PASSWORD&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PASSWORD&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1200_9106-对私客户信息维护交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1200_9106 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200_9106-对私客户信息维护" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;BODY&quot;: {&#xd;
		&quot;CLIENT_NO&quot;: &quot;${CLIENT_NO}&quot;,&#xd;
		&quot;CH_GIVEN_NAME&quot;: &quot;${CH_GIVEN_NAME}&quot;,&#xd;
        &quot;CH_SURNAME&quot;: &quot;${CH_SURNAME}&quot;,&#xd;
        &quot;ACCT_EXEC&quot;: &quot;${ACCT_EXEC}&quot;,&#xd;
        &quot;BIRTH_DATE&quot;: &quot;19880509&quot;,&#xd;
        &quot;BLACKLIST_IND&quot;: &quot;&quot;,&#xd;
        &quot;CATEGORY_TYPE&quot;: &quot;${CATEGORY_TYPE}&quot;,&#xd;
        &quot;CHECK_REASON&quot;: &quot;${CHECK_REASON}&quot;,&#xd;
        &quot;CHILD_NUM&quot;: &quot;1&quot;,&#xd;
        &quot;CLASS_LEVEL&quot;: &quot;${CLASS_LEVEL}&quot;,&#xd;
        &quot;CLASS_LEVEL_DATE&quot;: &quot;&quot;,&#xd;
        &quot;CLIENT_INDICATOR&quot;: &quot;${CLIENT_INDICATOR}&quot;,&#xd;
        &quot;CLIENT_SHORT&quot;: &quot;${CLIENT_SHORT}&quot;,&#xd;
        &quot;CLIENT_SPREAD&quot;: &quot;&quot;,&#xd;
        &quot;CLIENT_TYPE&quot;: &quot;${CLIENT_TYPE}&quot;,&#xd;
        &quot;CLOSED_DATE&quot;: &quot;&quot;,&#xd;
        &quot;COMMISSION_CLIENT_NAME&quot;: &quot;&quot;,&#xd;
        &quot;COMMISSION_DOC_ID&quot;: &quot;&quot;,&#xd;
        &quot;COMMISSION_DOC_TYPE&quot;: &quot;&quot;,&#xd;
        &quot;COMMISSION_EXPIRY_DATE&quot;: &quot;&quot;,&#xd;
        &quot;COMPANY&quot;: &quot;ZGCB&quot;,&#xd;
        &quot;CONTACT_INFO&quot;: [&#xd;
            {&#xd;
                &quot;ADDRESS&quot;: &quot;北京市海淀区&quot;,&#xd;
                &quot;ADDR_MODE&quot;: &quot;1&quot;,&#xd;
                &quot;CITY&quot;: &quot;110000&quot;,&#xd;
                &quot;CLIENT_NO&quot;: &quot;${CLIENT_NO}&quot;,&#xd;
                &quot;CONTACT_TEL&quot;: &quot;${CONTACT_TEL}&quot;,&#xd;
                &quot;CONTACT_TYPE&quot;: &quot;${CONTACT_TYPE}&quot;,&#xd;
                &quot;COUNTRY&quot;: &quot;CHN&quot;,&#xd;
                &quot;OPTION&quot;: &quot;${OPTION1}&quot;,&#xd;
                &quot;POSTAL_CODE&quot;: &quot;100000&quot;,&#xd;
                &quot;PREF_FLAG&quot;: &quot;${PREF_FLAG}&quot;,&#xd;
                &quot;ROUTE&quot;: &quot;PHONE&quot;,&#xd;
                &quot;STATE&quot;: &quot;11&quot;,&#xd;
                &quot;oFlag&quot;: &quot;update&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;COUNTRY_CITIZEN&quot;: &quot;CHN&quot;,&#xd;
        &quot;COUNTRY_LOC&quot;: &quot;CHN&quot;,&#xd;
        &quot;COUNTRY_RISK&quot;: &quot;CHN&quot;,&#xd;
        &quot;CR_RATING&quot;: &quot;001&quot;,&#xd;
        &quot;CTRL_BRANCH&quot;: &quot;90001&quot;,&#xd;
        &quot;DEPENDENT_NUM&quot;: &quot;&quot;,&#xd;
        &quot;DOCUMENT_INFO&quot;: [&#xd;
            {&#xd;
                &quot;CLIENT_NO&quot;: &quot;${CLIENT_NO}&quot;,&#xd;
                &quot;DIST_CODE&quot;: &quot;110101&quot;,&#xd;
                &quot;DOCUMENT_ID&quot;: &quot;${DOCUMENT_ID}&quot;,&#xd;
                &quot;DOCUMENT_TYPE&quot;: &quot;${DOCUMENT_TYPE}&quot;,&#xd;
                &quot;EXPIRY_DATE&quot;: &quot;${EXPIRY_DATE}&quot;,&#xd;
                &quot;INSPECT_DATE&quot;: &quot;${INSPECT_DATE}&quot;,&#xd;
                &quot;ISS_AUTHORITY&quot;: &quot;北京&quot;,&#xd;
                &quot;ISS_CITY&quot;: &quot;110000&quot;,&#xd;
                &quot;ISS_COUNTRY&quot;: &quot;CHN&quot;,&#xd;
                &quot;ISS_DATE&quot;: &quot;${ISS_DATE}&quot;,&#xd;
                &quot;ISS_STATE&quot;: &quot;11&quot;,&#xd;
                &quot;OPTION&quot;: &quot;${OPTION2}&quot;,&#xd;
                &quot;PREF_FLAG&quot;: &quot;${PREF_FLAG1}&quot;,&#xd;
                &quot;oFlag&quot;: &quot;update&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;EDUCATION&quot;: &quot;&quot;,&#xd;
        &quot;EMPLOYER_INDUSTRY&quot;: &quot;&quot;,&#xd;
        &quot;EMPLOYER_NAME&quot;: &quot;中关村银行&quot;,&#xd;
        &quot;EMPLOYMENT_DATE&quot;: &quot;&quot;,&#xd;
        &quot;EN_CITY&quot;: &quot;${EN_CITY}&quot;,&#xd;
        &quot;EN_LIVE_ADDRESS&quot;: &quot;${EN_LIVE_ADDRESS}&quot;,&#xd;
        &quot;GIVEN_NAME&quot;: &quot;${GIVEN_NAME}&quot;,&#xd;
        &quot;GLOBAL_ID&quot;: &quot;${DOCUMENT_ID}&quot;,&#xd;
        &quot;GLOBAL_ID_TYPE&quot;: &quot;${DOCUMENT_TYPE}&quot;,&#xd;
        &quot;HOBBY&quot;: &quot;&quot;,&#xd;
        &quot;INC_PROOF_DATE&quot;: &quot;&quot;,&#xd;
        &quot;INC_PROOF_IND&quot;: &quot;&quot;,&#xd;
        &quot;INLAND_OFFSHORE&quot;: &quot;${INLAND_OFFSHORE}&quot;,&#xd;
        &quot;INTERNAL_IND&quot;: &quot;${INTERNAL_IND}&quot;,&#xd;
        &quot;MAIDEN_NAME&quot;: &quot;&quot;,&#xd;
        &quot;MARITAL_STATUS&quot;: &quot;&quot;,&#xd;
        &quot;MAX_DEGREE&quot;: &quot;&quot;,&#xd;
        &quot;MON_MORTGAGE&quot;: &quot;300&quot;,&#xd;
        &quot;MON_RENTAL&quot;: &quot;5000&quot;,&#xd;
        &quot;MON_SALARY&quot;: &quot;8000&quot;,&#xd;
        &quot;MOTHERS_MAIDEN_NAME&quot;: &quot;&quot;,&#xd;
        &quot;OPTION&quot;: &quot;02&quot;,&#xd;
        &quot;PEP_IND&quot;: &quot;&quot;,&#xd;
        &quot;POST&quot;: &quot;J&quot;,&#xd;
        &quot;PROFIT_SEGMENT&quot;: &quot;&quot;,&#xd;
        &quot;QUALIFICATION&quot;: &quot;00&quot;,&#xd;
        &quot;RACE&quot;: &quot;01&quot;,&#xd;
        &quot;REDCROSS_NO&quot;: &quot;123123&quot;,&#xd;
        &quot;RESIDENT&quot;: &quot;1&quot;,&#xd;
        &quot;RESIDENT_CHANGE_STATUS&quot;: &quot;1&quot;,&#xd;
        &quot;RESIDENT_CHECK&quot;: &quot;2&quot;,&#xd;
        &quot;RESIDENT_DATE&quot;: &quot;20180103&quot;,&#xd;
        &quot;RESIDENT_ID&quot;: &quot;1&quot;,&#xd;
        &quot;RESIDENT_STATUS&quot;: &quot;C&quot;,&#xd;
        &quot;RISK_WEIGHT&quot;: &quot;12&quot;,&#xd;
        &quot;SEX&quot;: &quot;M&quot;,&#xd;
        &quot;SURNAME&quot;: &quot;l&quot;,&#xd;
        &quot;SURNAME_FIRST&quot;: &quot;N&quot;,&#xd;
        &quot;TAX_COUNTRY&quot;: &quot;&quot;,&#xd;
        &quot;TAX_PAYER_ID&quot;: &quot;&quot;,&#xd;
        &quot;TAX_PAYER_REASON&quot;: &quot;&quot;,&#xd;
        &quot;TAX_PAYER_REASON_TEXT&quot;: &quot;&quot;,&#xd;
        &quot;TEMP_CLIENT&quot;: &quot;N&quot;,&#xd;
        &quot;TRAN_STATUS&quot;: &quot;1&quot;,&#xd;
        &quot;YEARLY_INCOME&quot;: &quot;90000&quot;&#xd;
    },&#xd;
    &quot;LOCAL_HEAD&quot;: {},&#xd;
    &quot;SYS_HEAD&quot;: {&#xd;
        &quot;APPR_FLAG&quot;: &quot;&quot;,&#xd;
        &quot;APPR_USER_ID&quot;: &quot;&quot;,&#xd;
        &quot;AUTH_FLAG&quot;: &quot;&quot;,&#xd;
        &quot;AUTH_PASSWORD&quot;: &quot;&quot;,&#xd;
        &quot;AUTH_USER_ID&quot;: &quot;&quot;,&#xd;
        &quot;BRANCH_ID&quot;: &quot;90001&quot;,&#xd;
        &quot;DEST_BRANCH_NO&quot;: &quot;&quot;,&#xd;
        &quot;MESSAGE_CODE&quot;: &quot;9106&quot;,&#xd;
        &quot;MESSAGE_TYPE&quot;: &quot;1200&quot;,&#xd;
        &quot;MODULE_ID&quot;: &quot;CL&quot;,&#xd;
        &quot;ORG_SYS_ID&quot;: &quot;&quot;,&#xd;
        &quot;PROGRAM_ID&quot;: &quot;2002&quot;,&#xd;
        &quot;REVERSAL_TRAN_TYPE&quot;: &quot;&quot;,&#xd;
        &quot;SCENE_ID&quot;: &quot;01&quot;,&#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
        &quot;SERVER_ID&quot;: &quot;&quot;,&#xd;
        &quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;,&#xd;
        &quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;,&#xd;
        &quot;SOURCE_TYPE&quot;: &quot;MT&quot;,&#xd;
        &quot;TRAN_CODE&quot;: &quot;&quot;,&#xd;
        &quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;,&#xd;
        &quot;TRAN_MODE&quot;: &quot;ONLINE&quot;,&#xd;
        &quot;TRAN_TIMESTAMP&quot;: &quot;092222238&quot;,&#xd;
        &quot;TRAN_TYPE&quot;: &quot;&quot;,&#xd;
        &quot;USER_ID&quot;: &quot;${USER_ID}&quot;,&#xd;
        &quot;USER_LANG&quot;: &quot;CHINESE&quot;,&#xd;
        &quot;WS_ID&quot;: &quot;05&quot;&#xd;
    }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_NO&quot;));
vars.put(&quot;CH_GIVEN_NAME&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CH_GIVEN_NAME&quot;));
vars.put(&quot;CH_SURNAME&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CH_SURNAME&quot;));
vars.put(&quot;ACCT_EXEC&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_EXEC&quot;));
vars.put(&quot;CATEGORY_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CATEGORY_TYPE&quot;));
vars.put(&quot;CHECK_REASON&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHECK_REASON&quot;));
vars.put(&quot;CLASS_LEVEL&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLASS_LEVEL&quot;));
vars.put(&quot;CLASS_LEVEL_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLASS_LEVEL_DATE&quot;));
vars.put(&quot;CLIENT_INDICATOR&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_INDICATOR&quot;));
vars.put(&quot;CLIENT_SHORT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_SHORT&quot;));
vars.put(&quot;CLIENT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_TYPE&quot;));
vars.put(&quot;ADDR_MODE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ADDR_MODE&quot;));
vars.put(&quot;CONTACT_TEL&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CONTACT_TEL&quot;));
vars.put(&quot;CONTACT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CONTACT_TYPE&quot;));
vars.put(&quot;OPTION1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OPTION1&quot;));
vars.put(&quot;PREF_FLAG&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PREF_FLAG&quot;));
vars.put(&quot;DEPENDENT_NUM&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DEPENDENT_NUM&quot;));
vars.put(&quot;DOCUMENT_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_ID&quot;));
vars.put(&quot;DOCUMENT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_TYPE&quot;));
vars.put(&quot;EXPIRY_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;EXPIRY_DATE&quot;));
vars.put(&quot;INSPECT_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INSPECT_DATE&quot;));
vars.put(&quot;ISS_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ISS_DATE&quot;));
vars.put(&quot;OPTION2&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OPTION2&quot;));
vars.put(&quot;PREF_FLAG1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PREF_FLAG1&quot;));
vars.put(&quot;EDUCATION&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;EDUCATION&quot;));
vars.put(&quot;EMPLOYER_INDUSTRY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;EMPLOYER_INDUSTRY&quot;));
vars.put(&quot;EMPLOYMENT_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;EMPLOYMENT_DATE&quot;));
vars.put(&quot;EN_CITY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;EN_CITY&quot;));
vars.put(&quot;EN_LIVE_ADDRESS&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;EN_LIVE_ADDRESS&quot;));
vars.put(&quot;GIVEN_NAME&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;GIVEN_NAME&quot;));
vars.put(&quot;INC_PROOF_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INC_PROOF_DATE&quot;));
vars.put(&quot;INC_PROOF_IND&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INC_PROOF_IND&quot;));
vars.put(&quot;INLAND_OFFSHORE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INLAND_OFFSHORE&quot;));
vars.put(&quot;INTERNAL_IND&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INTERNAL_IND&quot;));
vars.put(&quot;MARITAL_STATUS&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;MARITAL_STATUS&quot;));
vars.put(&quot;MAX_DEGREE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;MAX_DEGREE&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1000_0301-凭证出售交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1000_0301 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1000_0301-凭证出售" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1000&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0301&quot;, &#xd;
		&quot;SERVICE_ID&quot;: &quot;110010001&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;01&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;165840021&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3500&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;${PROD_TYPE}&quot;, &#xd;
		&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;WITHDRAWAL_TYPE&quot;: &quot;S&quot;, &#xd;
		&quot;CLIENT_NO&quot;: &quot;${CLIENT_NO}&quot;, &#xd;
		&quot;PASSWORD&quot;: &quot;&quot;, &#xd;
		&quot;DOC_ARRAY&quot;:[{&#xd;
			&quot;DOC_TYPE&quot;: &quot;${DOC_TYPE}&quot;, &#xd;
			&quot;PREFIX&quot;: &quot;${PREFIX}&quot;, &#xd;
			&quot;VOUCHER_START_NO&quot;: &quot;${VOUCHER_START_NO}&quot;, &#xd;
			&quot;VOUCHER_END_NO&quot;: &quot;${VOUCHER_END_NO}&quot;, &#xd;
		}],&#xd;
		&quot;INTERNAL_KEY&quot;: &quot;${INTERNAL_KEY}&quot;, &#xd;
		&quot;SERV_DETAIL&quot;:[{&#xd;
			&quot;FEE_TYPE&quot;: &quot;${FEE_TYPE}&quot;, &#xd;
			&quot;FEE_CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;FEE_AMT&quot;: &quot;${FEE_AMT}&quot;, &#xd;
			&quot;ORIG_FEE_AMT&quot;: &quot;${FEE_AMT}&quot;, &#xd;
			&quot;DISC_FEE_AMT&quot;: &quot;&quot;, &#xd;
			&quot;DISC_TYPE&quot;: &quot;01&quot;, &#xd;
			&quot;DISC_RATE&quot;: &quot;&quot;, &#xd;
			&quot;BO_CLASS&quot;: &quot;O&quot;, &#xd;
			&quot;CHARGE_MODE&quot;: &quot;${CHARGE_MODE}&quot;, &#xd;
			&quot;CHARGE_TO_BASE_ACCT_NO&quot;: &quot;${CHARGE_TO_BASE_ACCT_NO}&quot;, &#xd;
			&quot;CHARGE_TO_CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;CHARGE_TO_PROD_TYPE&quot;: &quot;${CHARGE_TO_PROD_TYPE}&quot;, &#xd;
			&quot;CHARGE_TO_ACCT_SEQ_NO&quot;: &quot;${CHARGE_TO_ACCT_SEQ_NO}&quot;, &#xd;
			&quot;WITHDRAWAL_TYPE&quot;: &quot;S&quot;, &#xd;
			&quot;PASSWORD&quot;: &quot;&quot;, &#xd;
		}&#xd;
		{&#xd;
			&quot;FEE_TYPE&quot;: &quot;${FEE_TYPE1}&quot;, &#xd;
			&quot;FEE_CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;FEE_AMT&quot;: &quot;${FEE_AMT1}&quot;, &#xd;
			&quot;ORIG_FEE_AMT&quot;: &quot;${FEE_AMT1}&quot;, &#xd;
			&quot;DISC_FEE_AMT&quot;: &quot;&quot;, &#xd;
			&quot;DISC_TYPE&quot;: &quot;01&quot;, &#xd;
			&quot;DISC_RATE&quot;: &quot;&quot;, &#xd;
			&quot;BO_CLASS&quot;: &quot;O&quot;, &#xd;
			&quot;CHARGE_MODE&quot;: &quot;${CHARGE_MODE1}&quot;, &#xd;
			&quot;CHARGE_TO_BASE_ACCT_NO&quot;: &quot;${CHARGE_TO_BASE_ACCT_NO1}&quot;, &#xd;
			&quot;CHARGE_TO_CCY&quot;: &quot;CNY&quot;, &#xd;
			&quot;CHARGE_TO_PROD_TYPE&quot;: &quot;${CHARGE_TO_PROD_TYPE1}&quot;, &#xd;
			&quot;CHARGE_TO_ACCT_SEQ_NO&quot;: &quot;${CHARGE_TO_ACCT_SEQ_NO1}&quot;, &#xd;
			&quot;WITHDRAWAL_TYPE&quot;: &quot;S&quot;, &#xd;
			&quot;PASSWORD&quot;: &quot;&quot;, &#xd;
		}],&#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_NO&quot;));
vars.put(&quot;DOC_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOC_TYPE&quot;));
vars.put(&quot;PREFIX&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PREFIX&quot;));
vars.put(&quot;VOUCHER_START_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;VOUCHER_START_NO&quot;));
vars.put(&quot;VOUCHER_END_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;VOUCHER_END_NO&quot;));
vars.put(&quot;INTERNAL_KEY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INTERNAL_KEY&quot;));
vars.put(&quot;FEE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;FEE_TYPE&quot;));
vars.put(&quot;FEE_AMT&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;FEE_AMT&quot;));
vars.put(&quot;CHARGE_MODE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_MODE&quot;));
vars.put(&quot;CHARGE_TO_BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_TO_BASE_ACCT_NO&quot;));
vars.put(&quot;CHARGE_TO_PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_TO_PROD_TYPE&quot;));
vars.put(&quot;CHARGE_TO_ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_TO_ACCT_SEQ_NO&quot;));
vars.put(&quot;FEE_TYPE1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;FEE_TYPE1&quot;));
vars.put(&quot;FEE_AMT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;FEE_AMT1&quot;));
vars.put(&quot;CHARGE_MODE1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_MODE1&quot;));
vars.put(&quot;CHARGE_TO_BASE_ACCT_NO1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_TO_BASE_ACCT_NO1&quot;));
vars.put(&quot;CHARGE_TO_PROD_TYPE1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_TO_PROD_TYPE1&quot;));
vars.put(&quot;CHARGE_TO_ACCT_SEQ_NO1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CHARGE_TO_ACCT_SEQ_NO1&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_0007-账户基本信息查询交易" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_0007 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_0007-账户基本信息查询" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0007&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;150559215&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3050&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;${PROD_TYPE}&quot;, &#xd;
		&quot;CCY&quot;: &quot;CNY&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1400_0107-根据客户号或者证件信息查询存款账户交易 " enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1400_0107 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1400_0107-根据客户号或者证件信息查询存款账户 " enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1400&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0107&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;140502832&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;JKT${__RandomString(27,QAZWSXEDCRFVTGBYHNUJMIKOLP0987654321,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3510&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;CLIENT_NO&quot;: &quot;${CLIENT_NO}&quot;, &#xd;
		&quot;DOCUMENT_ID&quot;: &quot;${DOCUMENT_ID}&quot;, &#xd;
		&quot;DOCUMENT_TYPE&quot;: &quot;${DOCUMENT_TYPE}&quot;, &#xd;
		&quot;ISS_COUNTRY&quot;: &quot;${ISS_COUNTRY}&quot;, &#xd;
		&quot;LEAD_ACCT_FLAG&quot;: &quot;${LEAD_ACCT_FLAG}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;CLIENT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;CLIENT_NO&quot;));
vars.put(&quot;DOCUMENT_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_ID&quot;));
vars.put(&quot;DOCUMENT_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DOCUMENT_TYPE&quot;));
vars.put(&quot;ISS_COUNTRY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ISS_COUNTRY&quot;));
vars.put(&quot;LEAD_ACCT_FLAG&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;LEAD_ACCT_FLAG&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Priority2" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="临时" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1000_0124-转账撤销" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1000_0124 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1000_0124-转账撤销" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1000&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0124&quot;, &#xd;
		&quot;SERVICE_ID&quot;: &quot;010010004&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;01&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;MT&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;90001&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${TRAN_DATE}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;150559215&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;3205&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;-1&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;0&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;E&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;REVOKE_REASON&quot;: &quot;${REVOKE_REASON}&quot;, &#xd;
		&quot;ACCT_SEQ_NO&quot;: &quot;${ACCT_SEQ_NO}&quot;, &#xd;
		&quot;ACCT_CCY&quot;: &quot;${ACCT_CCY}&quot;, &#xd;
		&quot;PROD_TYPE&quot;: &quot;${PROD_TYPE}&quot;, &#xd;
		&quot;INTERNAL_KEY&quot;: &quot;${INTERNAL_KEY}&quot;, &#xd;
		&quot;TRAN_AMT&quot;: &quot;&quot;, &#xd;
		&quot;RES_SEQ_NO&quot;: &quot;${RES_SEQ_NO}&quot;, &#xd;
		&quot;ARRIVAL_STATUS&quot;: &quot;&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;REVOKE_REASON&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;REVOKE_REASON&quot;));
vars.put(&quot;ACCT_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_SEQ_NO&quot;));
vars.put(&quot;ACCT_CCY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_CCY&quot;));
vars.put(&quot;PROD_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PROD_TYPE&quot;));
vars.put(&quot;INTERNAL_KEY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;INTERNAL_KEY&quot;));
vars.put(&quot;RES_SEQ_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;RES_SEQ_NO&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1200_0123-好享存签约解约" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Params JDBC Request" enabled="true">
                <stringProp name="dataSource">testdb</stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="query">SELECT * FROM PUBLIC_PARA  AS pp INNER JOIN 1200_0161 AS para ON pp.PUBLIC_CASE_TYPE = &apos;P&apos; AND para.CASE_TYPE in(&apos;P&apos;,&apos;N&apos;);1200_2206
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID</stringProp>
                <stringProp name="resultVariable">resultObject</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ID</stringProp>
                <stringProp name="ForeachController.returnVal"></stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200_0123-好享存签约解约" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;SYS_HEAD&quot;:{&#xd;
		&quot;SERVICE_ID&quot;: &quot;090020001&quot;, &#xd;
		&quot;SCENE_ID&quot;: &quot;01&quot;, &#xd;
		&quot;TRAN_MODE&quot;: &quot;ONLINE&quot;, &#xd;
		&quot;SOURCE_TYPE&quot;: &quot;${SOURCE_TYPE}&quot;, &#xd;
		&quot;BRANCH_ID&quot;: &quot;${BRANCH_ID}&quot;, &#xd;
		&quot;USER_ID&quot;: &quot;${USER_ID}&quot;, &#xd;
		&quot;TRAN_DATE&quot;: &quot;${__time(yyyyMMdd,)}&quot;, &#xd;
		&quot;TRAN_TIMESTAMP&quot;: &quot;${__time(HHmmss,)}&quot;, &#xd;
		&quot;USER_LANG&quot;: &quot;CHINESE&quot;, &#xd;
		&quot;SEQ_NO&quot;: &quot;${SYSTEM_ID}${__time(yyyyMMddHHmmss,)}${__Random(111111,999999,)}&quot;, &#xd;
		&quot;SYSTEM_ID&quot;: &quot;${SYSTEM_ID}&quot;, &#xd;
		&quot;COMPANY&quot;: &quot;&quot;, &#xd;
		&quot;SOURCE_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;DEST_BRANCH_NO&quot;: &quot;&quot;, &#xd;
		&quot;FILE_PATH&quot;: &quot;&quot;, &#xd;
		&quot;MAC_VALUE&quot;: &quot;&quot;, &#xd;
		&quot;WS_ID&quot;: &quot;&quot;, &#xd;
		&quot;PROGRAM_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;AUTH_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;APPR_USER_ID&quot;: &quot;&quot;, &#xd;
		&quot;APPR_FLAG&quot;: &quot;&quot;, &#xd;
		&quot;VERSION&quot;: &quot;&quot;, &#xd;
		&quot;THREAD_NO&quot;: &quot;&quot;, &#xd;
		&quot;EXTEND_ARRAY&quot;:[{&#xd;
		}],&#xd;
		&quot;EXTEND_FIELD&quot;: &quot;&quot;, &#xd;
		&quot;MAC_ORG_ID&quot;: &quot;&quot;, &#xd;
		&quot;CNSM_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SRC_SYS_SVRID&quot;: &quot;&quot;, &#xd;
		&quot;SERVICE_CODE&quot;: &quot;MbsdCore&quot;, &#xd;
		&quot;MESSAGE_TYPE&quot;: &quot;1200&quot;, &#xd;
		&quot;MESSAGE_CODE&quot;: &quot;0123&quot;, &#xd;
	},&#xd;
	&quot;APP_HEAD&quot;:{&#xd;
		&quot;PGUP_OR_PGDN&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_NUM&quot;: &quot;&quot;, &#xd;
		&quot;CURRENT_NUM&quot;: &quot;&quot;, &#xd;
		&quot;TOTAL_FLAG&quot;: &quot;&quot;, &#xd;
	},&#xd;
	&quot;BODY&quot;:{&#xd;
		&quot;GROUP_NAME&quot;: &quot;${GROUP_NAME}&quot;, &#xd;
		&quot;BASE_ACCT_NO&quot;: &quot;${BASE_ACCT_NO}&quot;, &#xd;
		&quot;CCY&quot;: &quot;${CCY}&quot;, &#xd;
		&quot;OPTION&quot;: &quot;${OPTION}&quot;, &#xd;
		&quot;HXC_PROD_TYPE&quot;: &quot;${HXC_PROD_TYPE}&quot;, &#xd;
		&quot;RESERVED&quot;: &quot;${RESERVED}&quot;, &#xd;
		&quot;RETAINED_AMOUNT&quot;: &quot;${RETAINED_AMOUNT}&quot;, &#xd;
	}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//import org.apache.jmeter.assertions;
import org.apache.jmeter.samplers.SampleResult;
//import org.apache.jmeter.assertions.AssertionResult;

String response_data = prev.getResponseDataAsString();
String public_case_type = vars.get(&quot;PUBLIC_CASE_TYPE&quot;);
String assert1;

if(public_case_type.equals(&quot;N&quot;)){
	assert1 = vars.get(&quot;PUBLIC_ASSERT1&quot;);
	//当需要多个断言时，在此获取assertn
	}
	else{
		assert1 = vars.get(&quot;ASSERT1&quot;);
		}
if(!response_data.contains(assert1)){
	Failure = true;
	FailureMessage = &quot;Actually Response: &quot; + response_data;
}else
{
	Failure = false;
	//log.info(&quot;Actually Response: &quot; + response_data);
}


</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">0</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">row</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">int i = ${row};
//公共参数，不用修改
vars.put(&quot;USER_ID&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;USER_ID&quot;));
vars.put(&quot;TRAN_DATE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;TRAN_DATE&quot;));
vars.put(&quot;PUBLIC_ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_ASSERT1&quot;));
vars.put(&quot;PUBLIC_CASE_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;PUBLIC_CASE_TYPE&quot;));
//交易独有的参数，依据交易设置
vars.put(&quot;BASE_ACCT_NO&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;BASE_ACCT_NO&quot;));
vars.put(&quot;ACCT_CCY&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ACCT_CCY&quot;));
vars.put(&quot;OPTION&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;OPTION1&quot;));
vars.put(&quot;DEAL_CLASS&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DEAL_CLASS&quot;));
vars.put(&quot;DEAL_TYPE&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;DEAL_TYPE&quot;));
vars.put(&quot;ASSERT1&quot;,vars.getObject(&quot;resultObject&quot;).get(i).get(&quot;ASSERT1&quot;));
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
